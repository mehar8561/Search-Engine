RDF Data Cube Vocabulary RDF Data Cube Vocabulary W3C Recommendation January version: Latest published version: Implementation report: Previous version: Editors: Richard Cyganiak, DERI, NUI Galway Dave Reynolds, Epimorphics Ltd Contributors: Jeni Tennison refer errata, list issues document discovered after publication. document also available non-normative format: diff previous version English version specification only normative version. Non-normative translations also be available. Copyright W3CÂ® ERCIM, Keio, Beihang), Rights Reserved. W3C liability, trademark document use rules apply. Abstract There are many situations be useful be able topublishmulti-dimensional data, such as statistics, web such waythat be linked related data sets concepts. Data Cubevocabulary means do using W3C RDF(Resource Description Framework) standard. model underpinning theData Cube vocabulary iscompatible cube model SDMX Dataand Metadata eXchange), ISO standard exchanging sharingstatistical data metadata organizations. Data Cubevocabulary core foundation supports extensionvocabularies enable publication other aspects ofstatistical data flows other multi-dimensional data sets. namespace terms ontology vocabulary defined document also available non-normative formats: Turtle. Status Document section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index document been reviewed W3C Members, software developers, other W3C groups interested parties, endorsed Director as W3C Recommendation. stable document be used as reference material cited document. W3C's role making Recommendation draw attention specification promote widespread deployment. functionality interoperability Web. vocabulary was originally developed published outside W3C, been extended further developed Government Linked Data Working Group. document was published Government Linked Data Working Group as Recommendation. wish make comments regarding document, send archives). comments are Working Group's implementation report. document was produced group operating February W3C Patent Policy. W3C public list patent disclosures made connection deliverables group; page also instructions disclosing patent. individual actual knowledge patent individual Essential Claim(s) disclose information accordance section W3C Patent Policy. Table Contents Outline vocabulary Vocabulary index Introduction RDF Linked Data SDMX related standards Audience scope Namespaces Document Conventions Conformance Data cubes Data Sets cube model dimensions, attributes, measures Introducing Slices example Creating data structure definitions Dimensions, attributes measures Content oriented guidelines Example dimensions measure ComponentSpecifications DataStructureDefinitions Handling multiple measures Expressing data sets Data sets observations Slices groups observations Concept schemes code lists Coded values components properties Hierarchical code lists Non-SKOS hierarchies Aggregation DataSet metadata Categorizing data set Describing publishers Abbreviated normalized data cubes Normalization algorithm Well-formed cubes Integrity constraints Vocabulary reference DataSets Observations Slices Dimensions, Attributes, Measures Reusable general purpose component properties Data Structure Definitions Component specifications qualifying component use DSD Slice definitions Concepts Non-SKOS Hierarchies A. Acknowledgements B. Change history C. Complete example Data Cube D. References D.1 Normative references D.2 Informative references Outline vocabulary Fig. Pictorial summary key terms relationship Vocabulary index Classes: qb:Attachable qb:AttributeProperty qb:CodedProperty qb:ComponentProperty qb:ComponentSet qb:ComponentSpecification qb:DataSet qb:DataStructureDefinition qb:DimensionProperty qb:HierarchicalCodeList qb:MeasureProperty qb:Observation qb:Slice qb:ObservationGroup qb:SliceKey Properties: qb:attribute qb:codeList qb:component qb:componentAttachment qb:componentProperty qb:componentRequired qb:concept qb:dataSet qb:dimension qb:hierarchyRoot qb:measure qb:measureDimension qb:measureType qb:observation qb:observationGroup qb:order qb:parentChildProperty qb:slice qb:sliceKey qb:sliceStructure qb:structure Introduction section non-normative. Statistical data foundation policyprediction, planning adjustments andunderpins many mash-ups visualisationswe web. There strong interestin being able publish statistical data web-friendly formatto enable be linked combined related information. heart statistical dataset set observed valuesorganized along group dimensions, together associated metadata.The Data Cube vocabulary such information be representedusing W3C RDF(Resource Description Framework) standard published following theprinciples oflinked data.The vocabulary based approach used SDMX ISO standardfor statistical data exchange. cube model verygeneral so Data Cube vocabulary be used other data setssuch as survey data, spreadsheets OLAP data cubes Data Cube vocabulary focused purely thepublication multi-dimensional data web. envisage series modularvocabularies being developed extend core foundation. Inparticular, need SDMX extension vocabulary support thepublication additional context statistical data as encompassing DataFlows associated Provision Agreements). Other extensions are possible tosupport metadata surveys called as encompassed DDI)or publication statistical reference metadata. Data Cube turn following existing RDFvocabularies: SKOS concept schemes SCOVO forcore statistical structures Dublin Core Terms metadata VoiD data access FOAF agents ORG organizations RDF Linked Data Linked data approach publishing data web, enablingdatasets be linked together references common concepts. approach use HTTP URIs name entities concepts so consumers ofthe data look-up URIs get more information, including linksto other related URIs.RDF standard representation theinformation entities concepts, returnedby dereferencing URIs. There are number benefits being able publish multi-dimensional data, such as statistics,using RDF linked data approach: individual observations, groups observations, become(web) addressable. publishers third parties annotateand link data; example report reference specificfigures based allowing fine grained provenance trace-back. Data be flexibly combined datasets sets example find allReligious schools census areas high values NationalIndicators pertaining religious tolerance). statisticaldata integral part broader web linked data. publishers currently only offer static files thenpublishing as linked-data offers flexible, non-proprietary, machinereadable means publication supports out-of-the-box web APIfor programmatic access. reuse standardized tools components. SDMX related standards Statistical Data Metadata Exchange Initiativewas organised international organizations Eurostat, IMF, OECD, World Bank UN) torealise greater efficiencies statistical practice. Theseorganisations allcollect significant amounts data, mostly national level,to support policy. also disseminate data supra-nationaland international levels. There have been number important results work: twoversions set technical specifications ISO:TS release several recommendations forstructuring harmonising cross-domain statistics, SDMXContent-Oriented Guidelines. products are available standards are nowbeing widely adoptedaround world collection, exchange, processing, anddissemination aggregate statistics official statisticalorganisations. UN Statistical Commission recommendedSDMX as preferred standard statistics SDMX specification core information modelwhich reflected concrete form syntaxes SDMX-ML XMLsyntax) SDMX-EDI. RDF Data Cube vocabulary core SDMX Information Model Readers find SDMX User Guide useful background. key component SDMX standards package arethe Content-Oriented Guidelines set ofcross-domain concepts, code lists, categories supportinteroperability comparability datasets providing ashared terminology SDMX implementers RDF versions theseterms are available separately use along Data Cubevocabulary, Content oriented guidelines further details. external resources do not form normative part Data Cube Vocabulary specification. Audience scope document Data Cube vocabularyIt aimed people wishing publishstatistical other multi-dimension data RDF.Mechanics cross-format translation otherformats such as SDMX-ML are not covered here. Namespaces Document Conventions names RDF entities classes, predicates, individuals areURIs. are usually expressed using compact notation thename written prefix:localname, prefixidentifies namespace URI. namespace identified prefix prepended localname obtain full URI. following namespaces are used document: Prefix Namespace Reference qb document skos scovo void foaf org dct owl rdf rdfs admingeo used examples only) interval used examples only) eg used examples only) RDF examples are written Turtle syntax Conformance as sections marked as non-normative, authoring guidelines, diagrams, examples, notes specification are non-normative. Everything else specification normative. key words NOT, REQUIRED, NOT, RECOMMENDED, MAY, OPTIONAL specification are be interpreted as described data interchange, however interchange conformant Data Cube uses terms properties) Data Cube way consistent semantics as declared specification, particular exchanged RDF graphs constitute either well-formed well-formed abbreviated Data Cubes; not use terms other vocabularies instead ones defined vocabulary reasonably be used such terms addition Data Cube terms permissible). conforming data interchange: include terms other vocabularies; use only subset Data Cube terms. Data cubes section non-normative. Data Sets section non-normative. DataSet collection statistical data defined structure. data data set be roughly described as belonging following kinds: Observations actual data, measured values. statistical table, observations be values table cells. Organizational structure locate observation hypercube, least know value dimension observation located, so values be specified observation. Datasets have additional organizational structure form slices as described section Structural metadata Having located observation, need certain metadata order be able interpret unit measurement? normal value series break? value measured estimated? metadata are provided as attributes be attached individual observations, higher levels. Reference metadata metadata dataset as whole, such as categorization dataset, publisher, SPARQL endpoint be accessed. External metadata described section cube model dimensions, attributes, measures section non-normative. statistical data set collection observations madeat points logical space. collection be characterized bya set dimensions define observation time,area, gender) along metadata describing beenmeasured economic activity, population), was measured theobservations are expressed units, multipliers, status). canthink statistical data set as multi-dimensionalspace, hyper-cube, indexed dimensions. space iscommonly referred toas cube short; though name be takenliterally, not meant imply thatthere are exactly dimensions be more fewer) northatall dimensions are somehow similar size. cube organized according set dimensions,attributes measures. collectively call components. dimension components serve identifythe observations. set values dimensioncomponentsis sufficient identify single observation. Examples dimensionsinclude thetime observation geographic region observation covers. measure components represent phenomenon beingobserved. attribute components allow qualify andinterpret observed value(s). enable specification units ofmeasure, scaling factors metadata such as statusof observation estimated, provisional). Introducing Slices section non-normative. frequently useful group subsets observations adataset. particular fix small subset) thedimensions be able refer observations thosedimension values as single entity. call such selection slicethrough cube. example, given data set regional performanceindicators then group together observations about given indicatorand given region. such group be slice representing time series observed values. data publisher identify slices data variouspurposes. be useful grouping metadata be attached, example note achange measurement process whichaffects particular time region. Slices also enable publisher toidentify label particular subsets data be presented theuser enable consuming application more easily construct appropriate graph chart presentation. statistical applications common work withslices single dimension left unspecified. particular,to refer such slices single free dimension time as TimeSeries refer slices along non-time dimensions as Data Cube vocabulary allow arbitrary dimensionalityslices do not give different names particular types slice. Such sub-classes slice be added extension vocabularies. example section non-normative. order illustrate use data cube vocabulary willuse small demonstrationdata set extracted fromStatsWales reportnumber life expectancy broken down region(unitary authority), age time. extract use Male Female Male Female Male Female Newport Cardiff Monmouthshire MerthyrTydfil there are dimensions time period averages over year timespans), region sex. observation life expectancy population measure) need attribute define units measured values. example slicing data be define slices time sex arefixed slice. Such slices then show variation life expectancy different regions, i.e. corresponding columns above tabular layout. complete encoding data as Data Cube, including such slice structure, shown Appendix C. Creating data structure definitions qb:DataStructureDefinition structure moredatasets. particular, dimensions, attributes measures used dataset along qualifying information such as ordering dimensions attributes are required optional. well-formed data sets much information implicit RDF component properties found observations. However, explicit declaration structure several benefits: verification data set matches expected structure, particular detection incoherent sets obtained combining differently structured source data; consumer easily determine dimensions are available query presentational order, turn simplifies data consumption, example UI construction; supports transmission structure information associated SDMX data flows below). common, publishing statistical data, have regular series publications whichall follow same structure. notion Data Structure Definition definethat structure once then reuse publication series. Consumers then be confident structure data not changed. Dimensions, attributes measures Data Cube vocabulary dimensions, attributes measures as RDF properties. instance abstract qb:ComponentProperty class, turn sub-classes qb:DimensionProperty, qb:AttributeProperty qb:MeasureProperty. component property several pieces information: concept being represented time geographic area), nature component attribute measure) as represented type component property, type code list used represent value. same concept be manifested different components. example, concept currency be used as dimension data set dealing exchange rates) as attribute describing currency observed trade took place). concept time typically used only as dimension be encoded as data value xsd:dateTime) as symbolic value URI drawn reference time URI set developed data.gov.uk). statistical agencies common have standard thesaurus statistical concepts underpin components used multiple different data sets. support reuse general statistical concepts data cube vocabulary qb:concept property links qb:ComponentProperty concept use SKOS vocabulary represent such concepts. very natural cases concepts are already maintained as controlled term list thesaurus. developing data structure definition informal data set there not be appropriate concept already. cases, concept likely be reused other guises recommended publish skos:Concept along specific qb:ComponentProperty. However, such reuse not expected then not required do so qb:concept link optional simple instance appropriate subclass qb:ComponentProperty sufficient. representation possible values component described using rdfs:range property component usual RDF manner. Thus, example, values time dimension be represented using literals type xsd:dateTime as URIs drawn time reference service. statistical data sets common values be encoded using hierarchical) code list be useful be able easily identify overall code list more structured form. cater component also be optionally annotated qb:codeList indicate set skos:Concepts be used as codes. qb:codeList value be skos:ConceptScheme, skos:Collection qb:HierarchicalCodeList. such case rdfs:range component be left as simply skos:Concept useful design pattern also define rdfs:Class members are skos:Concepts particular scheme. way rdfs:range be made more specific generic RDF tools perform appropriate range checking. Note SDMX extension vocabulary there be further item information encode about components role play structure definition. particular, sometimes convenient consumers be able easily identify time dimension, component primary measure so forth. out such roles are intrinsic concepts so information be encoded providing subclasses skos:Concept role. particular choice roles here specific SDMX standard so not included core Data Cube vocabulary. illustrating components needed running example, there more piece machinery introduce, reusable set concepts components based SDMX. Content oriented guidelines section non-normative. SDMX standard set content oriented guidelines define set common statistical concepts associated code lists are intended be reusable data sets. community group developed RDF encodings guidelines. comprise: Prefix Namespace Description sdmx-concept SKOS Concepts COG defined concept sdmx-code SKOS Concepts ConceptSchemes COG defined code list sdmx-dimension component properties corresponding COG concept be used as dimension sdmx-attribute component properties corresponding COG concept be used as attribute sdmx-measure component properties corresponding COG concept be used as measure community resources are provided as convenience do not form part Data Cube specification. However, are used number existing Data Cube publications so reference worked examples. Example dimensions measure section non-normative. Turning example data set then there are dimensions represent time period, region authority) sex. There single measure topic data set expectancy) value years. Hence, need following components. Time. There suitable predefined concept SMDX-COG REF_PERIOD, so reuse corresponding component property sdmx-dimension:refPeriod. However, represent time period be convenient use reference time service declare data structure definition. Example eg:refPeriod rdf:Property, qb:DimensionProperty; rdfs:label period"@en; rdfs:subPropertyOf sdmx-dimension:refPeriod; rdfs:range interval:Interval; qb:concept sdmx-concept:refPeriod Region. Again there suitable COG concept associated component thatwe use again customize range component. case use Ordnance Survey Administrative Geography Ontology Example eg:refArea rdf:Property, qb:DimensionProperty; rdfs:label area"@en; rdfs:subPropertyOf sdmx-dimension:refArea; rdfs:range admingeo:UnitaryAuthority; qb:concept sdmx-concept:refArea Sex. case use corresponding COG component sdmx-dimension:sex directly, since default code list terms need. Measure. property give value observation. use default smdx-measure:obsValue topic being observed using metadata). However, aid readability processing RDF data sets use specific measure corresponding phenomenon being observed. Example eg:lifeExpectancy rdf:Property, qb:MeasureProperty; rdfs:label expectancy"@en; rdfs:subPropertyOf sdmx-measure:obsValue; rdfs:range xsd:decimal Unit measure attribute. primary measure own plain decimal value. correctly interpret value need define units measured case). defined using attributes qualify interpretation observed value. Specifically example use predefined sdmx-attribute:unitMeasure turn COG concept UNIT_MEASURE. express value attribute typically use common thesaurus units measure. sake simple example use DBpedia resource topic Wikipedia page covers minimal components needed define structure data set. ComponentSpecifications DataStructureDefinitions combine components specification structure dataset need declare qb:DataStructureDefinition resource turn reference set qb:ComponentSpecification resources. qb:DataStructureDefinition be reusable other data sets same structure. simplest case qb:ComponentSpecification simply references corresponding qb:ComponentProperty using sub properties qb:dimension, qb:measure qb:attribute). However, also possible qualify component specification several ways. Attributes be declared as optional required. attribute required be present observation then specification set qb:componentRequired. absence such declaration attribute assumed be optional. qb:componentRequired declaration only be applied component specifications attributes measures dimensions are always required. components be ordered giving integer value qb:order. order semantics be useful aid consuming agents generating appropriate user also be useful publication chain enable synthesis appropriate URIs observations. default values components be attached individual observation, called normalized representation. such observations stand alone, so SPARQL query retrieve observation immediately locate attributes enable observation be interpreted. However, also permissible attach attributes overall data set, intervening slice specific Measure case multiple measures). redundancy encoding instance data. declare such abbreviated structure, qb:componentAttachment property specification reference class corresponding attachment level qb:DataSet attributes be attached overall data set). classes be used as such attachment levels are subclasses qb:Attachable. case running example dimensions be usefully ordered. There only attribute, unit measure, required. interest illustrating vocabulary use declare attribute be attached level data set, however normalized representations are general easier query combine. So structure example data set other similar datasets) be declared Example eg:dsd-le qb:DataStructureDefinition; # dimensions qb:component qb:dimension eg:refArea; qb:order qb:component qb:dimension eg:refPeriod; qb:order qb:component qb:dimension sdmx-dimension:sex; qb:order # measure(s) qb:component qb:measure eg:lifeExpectancy]; # attributes qb:component qb:attribute sdmx-attribute:unitMeasure; qb:componentRequired qb:componentAttachment qb:DataSet; Note have given data structure definition URI since be reused different datasets same structure. Similarly component properties be reused different DSDs. However, component specifications are only useful scope particular DSD so have chosen represent using blank nodes. Handling multiple measures example data set relatively simple having single observable case expectancy") being measured. other data sets there be multiple measures. measures be similar nature data set local government performance provide multiple different performance indicators region) quite different data set trades provide quantity, value, weight trade). There are approaches representing multiple measures supported Data Cube vocabulary. first approach observation records single observed value measure.We introduce additional dimension value measure being conveyed observation. measure dimension approach supported SDMX information model. second approach single observation provide values multiple different measures.This particularly appropriate cases values singleobservational event such as multi-spectral sensor measurement. multi-measureapproach commonly used applications such as Business Intelligence OLAP. Data Cube vocabulary permits either representation approach be used though be mixed same data set. representation approaches require point space dimensions there observation, value be given measure. case multi-measure observations measure be present observation. cubes use measure dimension there are sets observations populated point cube sets there be observation giving measure. Multi-measure observations approach multiple observed values be attached individual observation. suited representation things sensor data OLAP cubes. use representation simply declare multiple qb:MeasureProperty components data structure definition attach instance property observations data set. example, have set shipment data containing unit count total weight shipment then have data structure definition such Example eg:dsd1 qb:DataStructureDefinition; rdfs:comment time measures approach)"@en; qb:component qb:dimension sdmx-dimension:refTime; qb:measure eg-measure:quantity; qb:measure eg-measure:weight; correspond individual observations such Example eg:dataset1 qb:DataSet; qb:structure eg:dsd1 eg:obs1a qb:Observation; qb:dataSet eg:dataset1; sdmx-dimension:refTime eg-measure:weight eg-measure:quantity Note limitation multi-measure approach not possible attach attribute single observed value. attribute attached observation instance apply whole observation indicate made observation). Attributes also be attached directly qb:MeasureProperty indicate unit measure measure) attachment whole data set data set using measure property) vary different observations. applications limitation problem then use measure dimension approach. Measure dimension approach observations having single measured value data set carry multiple measures adding extra dimension, measure dimension. value measure dimension particular measure being conveyed observation. representation approach used SDMX extension vocabulary introduce sub-class qb:DataStructureDefinition such single-measure restriction. use representation declare additional dimension data structure definition play role measure dimension. use Data Cube vocabulary provide single distinguished component purpose qb:measureType. extension vocabulary generalize provision roles identify concepts act as measure types, enabling other measure dimensions be declared. special case using qb:measureType as measure dimension, set allowed measures assumed be measures declared DSD. There need define separate code list enumerated class duplicate information. Thus, qb:measureType dimension property implicit code list. notion implicit code list qb:measureType small divergence SDMX usage. data structure definition above example, using representation approach, then be: Example eg:dsd2 qb:DataStructureDefinition; rdfs:comment time dimension approach)"@en; qb:component qb:dimension sdmx-dimension:refTime; qb:measure eg-measure:quantity; qb:measure eg-measure:weight; qb:dimension qb:measureType; correspond individual observations such Example eg:dataset2 qb:DataSet; qb:structure eg:dsd2 eg:obs2a qb:Observation; qb:dataSet eg:dataset2; sdmx-dimension:refTime qb:measureType eg-measure:weight eg-measure:weight eg:obs2b qb:Observation; qb:dataSet eg:dataset2; sdmx-dimension:refTime qb:measureType eg-measure:quantity eg-measure:quantity Note duplication having measure property show up as property measured value, as value measure dimension. accept duplication as necessary ensure uniform cube/dimension mechanism uniform way declaring using measure properties kinds datasets. familiar SDMX also note RDF representation there need separate measure" individual measures, individual measures are used directly. Extension vocabularies address round-tripping SDMX primary measure use separate annotation data structure definition. Expressing data sets Data sets observations resource representing entire data set created typed as qb:DataSet linked corresponding data structure definition qb:structure property. Pitfall: Note capitalization qb:DataSet, capitalization other vocabularies, such asvoid:Dataset dcat:Dataset. unusual capitalization chosen compatibilitywith SDMX standard. same related property qb:dataSet. observation represented as instance type qb:Observation. basic case then values attributes, dimensions measurements are attached directly observation components are RDF properties). observation linked containing data set using qb:dataSet property. Thus running example expect have: Example eg:dataset-le1 qb:DataSet; rdfs:label expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; qb:structure eg:dsd-le eg:o1 qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:newport_00pr eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M sdmx-attribute:unitMeasure eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:cardiff_00pt eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M sdmx-attribute:unitMeasure eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:monmouthshire_00pp eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M sdmx-attribute:unitMeasure eg:lifeExpectancy normalized structure easy query combine data sets there redundancy here. example, unit measure life expectancy uniform whole data set not change observations. cater situations Data Cube vocabulary components be attached high level nested structure. Indeed re-examine original Data Structure Declaration declared unit measure be attached data set level. So shortened version example Example eg:dataset-le1 qb:DataSet; rdfs:label expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; qb:structure eg:dsd-le sdmx-attribute:unitMeasure eg:o1 qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:newport_00pr eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy eg:o2 qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:cardiff_00pt eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le1 eg:refArea ex-geo:monmouthshire_00pp eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy data set containing just observations intervening structure then observation have complete set dimension values, along measure values. set structured using slices then further abbreviation possible, as discussed next section. Slices groups observations Slices allow group subsets observations together. not intended represent arbitrary selections observations uniform slices cube more dimension values are fixed. Slices be used number reasons: guide consuming applications present data organize data as set time series); provide identity slice enable be annotated externally referenced; reduce verbosity data set only stating fixed dimensional value once. illustrate use slices let group sample data set geographic series. enable refer e.g. life expectancy observations guide applications present comparative chart regions. first define structure slices want associating key" data structure definition. done creating qb:SliceKey list component properties be dimensions) be fixed slice. key attached DSD using qb:sliceKey. example: Example eg:sliceByRegion qb:SliceKey; rdfs:label region"@en; rdfs:comment grouping regions together, fixing sex time values"@en; qb:componentProperty eg:refPeriod, sdmx-dimension:sex eg:dsd-le-slice1 qb:DataStructureDefinition; qb:component qb:dimension eg:refArea; qb:order qb:dimension eg:refPeriod; qb:order qb:dimension sdmx-dimension:sex; qb:order qb:measure eg:lifeExpectancy]; sdmx-attribute:unitMeasure; qb:componentAttachment qb:DataSet; qb:sliceKey eg:sliceByRegion instance data then slices are represented instances qb:Slice link observations slice qb:observation key means qb:sliceStructure. Data sets indicate slices contain means qb:slice. Thus example have: Example eg:dataset-le2 qb:DataSet; rdfs:label expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; qb:structure eg:dsd-le-slice2 sdmx-attribute:unitMeasure qb:slice eg:slice2; qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M qb:observation eg:o1b, eg:o2b, eg:o3b, qb:Observation; qb:dataSet eg:dataset-le2 eg:refArea ex-geo:newport_00pr eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy eg:o2b qb:Observation; qb:dataSet eg:dataset-le2 eg:refArea ex-geo:cardiff_00pt eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le2 eg:refArea ex-geo:monmouthshire_00pp eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M eg:lifeExpectancy Note here are still repeating dimension values individual observations.This normalized representation means consuming application still query observed values uniformly having first parse data structuredefinition search slice definitions. desired, redundancy be reducedby declaring different attachment levels dimensions. example: Example eg:dsd-le-slice3 qb:DataStructureDefinition; qb:component qb:dimension eg:refArea; qb:order qb:dimension eg:refPeriod; qb:order qb:componentAttachment qb:Slice qb:dimension sdmx-dimension:sex; qb:order qb:componentAttachment qb:Slice qb:measure eg:lifeExpectancy]; qb:attribute sdmx-attribute:unitMeasure; qb:componentAttachment qb:DataSet; qb:sliceKey eg:sliceByRegion qb:DataSet; rdfs:label expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; qb:structure eg:dsd-le-slice3 sdmx-attribute:unitMeasure qb:slice eg:slice3 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M qb:observation eg:o1c, eg:o2c, eg:o3c, qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o2c qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy There are also situations publisher wishes group set observationstogether ease access presentation purposes set not definedby simply fixing set dimension values. example, representing weather observations be desirable group together latest observation available station even though observation have been taken different time. situations Data Cube vocabulary supportsqb:ObservationGroup. qb:ObservationGroup contain arbitrarycollection observations. qb:Slice special case qb:ObservationGroup. Concept schemes code lists Coded values components properties values dimensions data set be unambiguously defined. be typed values xsd:dateTime time instances) codes drawn code list. Similarly, many attributes used data sets represent coded values controlled term list rather free text descriptions. Data Cube vocabulary such codes are represented URI references usual RDF fashion. Sometimes appropriate URI sets already exist relevant dimensions representations area time periods running example). other cases data set being converted use controlled terms scheme not yet have associated URIs. cases recommend use SKOS, representing individual code values using skos:Concept overall set admissible values using skos:ConceptScheme skos:Collection. illustrate example drawn translation SDMX COG code list gender, as used already worked example. relevant subset code list Example sdmx-code:sex skos:ConceptScheme; skos:prefLabel list Sex codelist scheme"@en; rdfs:label list Sex codelist scheme"@en; skos:notation skos:note code list gender."@en; skos:definition rdfs:seeAlso sdmx-code:Sex sdmx-code:sex skos:hasTopConcept sdmx-code:sex-F sdmx-code:sex skos:hasTopConcept sdmx-code:sex-M rdfs:Class, owl:Class; rdfs:subClassOf skos:Concept rdfs:label list Sex codelist class"@en; rdfs:comment code list gender."@en; rdfs:seeAlso sdmx-code:sex skos:Concept, sdmx-code:Sex; skos:topConceptOf sdmx-code:sex; skos:prefLabel skos:notation skos:inScheme sdmx-code:sex skos:Concept, sdmx-code:Sex; skos:topConceptOf sdmx-code:sex; skos:prefLabel skos:notation skos:inScheme sdmx-code:sex skos:prefLabel used give name code, skos:note description skos:notation be used record short form code appear other serializations. SKOS specification generation custom datatype foreach use skos:notation here notation not intended usewithin RDF encodings, merely documents notation used other representations do not use such datatype). convenient good practice developing code list also create Class denote codes codelist, irrespective hierarchical structure. range anqb:ComponentProperty be defined using rdfs:rangewhich then permits standard RDF closed-world checkers validate use thecode list requiring custom SDMX-RDF-aware tooling. do theabove example using common convention class name thesame as concept scheme leading upper case. code list then be associated coded property, such as dimension: Example eg:sex qb:DimensionProperty, qb:CodedProperty; qb:codeList sdmx-code:sex rdfs:range sdmx-code:Sex Explicitly declaring code list using qb:codeList not mandatory be helpful cases concept scheme been defined. Hierarchical code lists cases code lists have hierarchical structure. particular, used SDMX data cube aggregations data values aggregating measure geographic regions).Hierarchical code lists be represented using skos:narrower relationship, sub-property link skos:hasTopConceptcodes down tree lattice child codes. publishing tool chains corresponding transitive closure skos:narrowerTransitive be automatically inferred. use skos:narrower possible declare new concept schemes extend existing scheme adding additional aggregation layers top.All items are linked scheme skos:inScheme. Non-SKOS hierarchies sometimes convenient be able specify hierarchical arrangement concepts other use SKOS relation skos:narrower. There are several situations useful, example: cases publishers wish be able reuse existing reference data as theircode lists. particularly geographic admin-geographic hierarchyis already maintained separate authority uses non-SKOS containment part-of relationships. such maintained reference data be reused there be multiple hierarchies relatethe same codes. particular set geographic entities participate geographic-containment hierarchyand administrative hierarchy do not precisely align. Data Cube vocabulary supports situation qb:HierarchicalCodeList class.An instance qb:HierarchicalCodeList set root concepts hierarchy parent-to-child relationship whichlinks term hierarchy immediate sub-terms. Thus qb:HierarchicalCodeListis similar skos:ConceptScheme qb:hierarchyRoot plays samerole as skos:hasTopConcept, value qb:parentChildProperty playsthe same role as skos:narrower. case code list already available as SKOS concept scheme collection, reasonable made so, then be used directly. qb:HierarchicalCodeList provided cases terms are not available as SKOS are available other RDF representation suitable reuse. example, Ordnance Survey Great Britain geographic hierarchy roots Regions such as Wales, Scotland, South West) uses spatial relations ontology define containment hierarchy. be represented as qb:HierarchicalCodeList using following. Example @prefix spatial: qb:HierarchicalCodeList; rdfs:label Hierarchy Great Britain"@en; qb:hierarchyRoot # South West # West Midlands # South East # Yorkshire Humber # East Midlands # Eastern # London # North West # North East # Wales # Scotland qb:parentChildProperty spatial:contains; qb:DimensionProperty qb:codeList eg:GBgeoHierarchy Note cases hierarchy be reused only have property relating child concepts parent concepts. situation handled declaring qb:parentChildProperty be owl:inverseOf child-to-parent property. example: Example @prefix spatial: qb:HierarchicalCodeList; qb:parentChildProperty spatial:within] Future extensions Data Cube support additional sub classes qb:HierarchicalCodeList, example declare hierarchies parent disjoint union children. Aggregation use SKOS, non-SKOS, hierarchies possible publish aggregatedstatistics non-leaf concepts hierarchy. Data Cube vocabulary imposesno constraints such aggregation done. Indeed statistical applications theappropriate statistical corrections make aggregated values be non-trivial dependent data precise analysis methodology. Similarly other applications such as OLAP number different aggregation operators are commonly used. Vocabulary terms represent aggregation operations employed given dataset, dataset be derived are not supported version Data Cube specification. Thisarea be addressed future extensions Data Cube. DataSet metadata DataSets be marked up metadata support discovery, presentation processing. Dublin Core Terms be used representing key metadata annotations commonly needed DataSets. RDFS terms display label descriptive comment be given as compatibility earlier versions Data Cube common RDF practice. recommend core set metadata terms dct:title rdfs:label be same as dct:title dct:description rdfs:comment be same as dct:description dct:issued dct:modified dct:subject dct:publisher dct:license Other documents, notably provide additional recommendations metadata terms data sets be used describing Data Cube DataSets. Categorizing data set Publishers statistics often categorize data sets different statistical domains, such as Education, Labour, Transportation.We encourage use dct:subject record such classification ofa whole data set.The classification terms include coarse grained classifications, suchas List Subject-matter Domains SDMX Content-oriented Guidelines, fine grained classifications support discovery data sets. classification schemes are typically represented using SKOS vocabulary. convenience SMDX Subject-matter Domains have been encoded as SKOS concept schemeat Thus sample dataset be marked up Example eg:dataset1 qb:DataSet; rdfs:label expectancy"@en; dct:title expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; dct:description expectancy Welsh Unitary authorities extracted Stats Wales"@en; dct:issued dct:subject sdmx-subject:3.2 # regional small area statistics sdmx-subject:1.4 # Health eg:Wales; # Wales eg:Wales skos:Concept drawn appropriate controlledvocabulary places. Describing publishers organization dataset be recorded as part dataset metadata.Again recommend use Dublin Core term dct:publisher this.The organization be represented as instance foaf:Agent, orsome more specific subclass such as org:Organization Example eg:dataset1 qb:DataSet; dct:publisher org:Organization, foaf:Agent; rdfs:label org" Extension vocabularies provide additional metadata properties impose constraints metadata be provided. Abbreviated normalized data cubes normal form then qb:Observations whichmake up Data Cube have property values requireddimensions, attributes measures as declared associated datastructure definition. form Data Cube istermed normalized. convenient format forquerying data possible write uniform queries whichextract sets observations, including multiplecubes. However, verbosity fully normalized representationincurs overheads transmission storage Data Cubes maybe problematic settings. Note abbreviated form provided as option there requirement be used. many settings standard compression techniques eliminate much overhead normalized form. address Data Cube vocabulary supports notion ofan abbreviated format componentproperties be attached other levels theData Cube. Specifically be attached toa qb:DataSet qb:Slice.In cases attached property taken be applied allthe qb:Observation instances associated thatattachment point. illustrationsee example unit ofmeasure declared as be attached whole data set neednot be repeated observation. also possible attach attributes qb:MeasureProperty case attribute intended apply only property not observations property Normalization algorithm define notions means transformation algorithm normalize abbreviated Data Cube. express transformation using SPARQL Update language Use notation not imply transformation be implemented way. Information exchanges using Data Cube retain data abbreviated form use other techniques such as query rewriting ease access, implement normalization algorithm other means handle data normalized form mix normalization algorithm sets SPARQL Update operations be applied turn SPARQL Dataset default graph Data Cube RDF graph be normalized. first update operation selective type property closure operations. serve purposes. ensure rdf:type assertions instances qb:Observation qb:Slice be omitted abbreviated Data Cube. also simplify second set update operations expanding sub properties qb:componentProperty qb:dimension, qb:measure qb:attribute). Phase Type property closure PREFIX rdf: qb: rdf:type qb:Observation qb:observation rdf:type qb:Observation rdf:type qb:DataSet qb:dataSet rdf:type qb:Slice qb:slice qb:componentProperty rdf:type qb:DimensionProperty qb:dimension qb:componentProperty rdf:type qb:MeasureProperty qb:measure qb:componentProperty rdf:type qb:AttributeProperty qb:attribute closure operations are implied RDFS semantics Data Cube vocabulary. Data Cube processors MAY apply full RDFS closure place update operation defined here. second update operation checks components data structure definition data set declared attachment levels. possible attachments levels occurrences component be pushed down corresponding observations. Phase Push down attachment levels PREFIX qb: Dataset attachmentsINSERT qb:componentProperty qb:componentAttachment qb:DataSet qb:structure qb:dataSet Slice attachmentsINSERT qb:componentProperty qb:componentAttachment qb:Slice qb:structure qb:slice qb:observation Dimension values slicesINSERT qb:componentProperty qb:DimensionProperty qb:structure qb:slice qb:observation Well-formed cubes instance RDF Data Cube conform set integrity constraints define section. well-formed RDF Data Cube RDF graph describing more instances qb:DataSet integrity checks defined here passes. well-formed abbreviated RDF Data Cube RDF graph expanded using normalization algorithm, yields well-formed RDF Data Cube. Integrity constraints integrity constraint expressed as narrative prose possible, SPARQL ASK query query template. ASK query applied RDF graph then return true graph more Data Cube instances violate corresponding constraint. Using SPARQL queries express integrity constraints not imply integrity checking be performed way. Implementations are free use alternative query formulations alternative implementation techniques perform equivalent checks. integrity constraint query following set prefix bindings: PREFIX rdf: rdfs: skos: qb: xsd: owl: complete set constraints listed below. IC-0. Datatype consistency RDF graph be consistent RDF D-entailment datatype map containing datatypes used graph. IC-1. Unique DataSet qb:Observation exactly associated qb:DataSet. ASK # Check observation data set qb:Observation FILTER NOT qb:dataSet UNION # Check just data set qb:Observation qb:dataSet FILTER IC-2. Unique DSD qb:DataSet exactly associated qb:DataStructureDefinition. ASK # Check dataset dsd qb:DataSet FILTER NOT qb:structure UNION # Check just dsd qb:DataSet qb:structure FILTER IC-3. DSD measure qb:DataStructureDefinition include least declared measure. ASK qb:DataStructureDefinition FILTER NOT qb:component qb:MeasureProperty]] IC-4. Dimensions have range dimension declared qb:DataStructureDefinition have declared rdfs:range. ASK qb:DimensionProperty FILTER NOT rdfs:range IC-5. Concept dimensions have code lists dimension range skos:Concept have qb:codeList. ASK qb:DimensionProperty rdfs:range skos:Concept FILTER NOT qb:codeList IC-6. Only attributes be optional only components ofa qb:DataStructureDefinition be marked asoptional, using qb:componentRequired are attributes. ASK qb:component qb:componentRequired qb:componentProperty FILTER NOT qb:AttributeProperty IC-7. Slice Keys be declared qb:SliceKey be associated qb:DataStructureDefinition. ASK qb:SliceKey FILTER NOT qb:DataStructureDefinition] qb:sliceKey IC-8. Slice Keys consistent DSD qb:componentProperty qb:SliceKey also be declared as qb:component associated qb:DataStructureDefinition. ASK qb:SliceKey; qb:componentProperty qb:sliceKey FILTER NOT qb:component IC-9. Unique slice structure qb:Slice have exactly associated qb:sliceStructure. ASK # Slice key qb:Slice FILTER NOT qb:sliceStructure UNION # Slice just key qb:Slice qb:sliceStructure FILTER IC-10. Slice dimensions complete qb:Slice have value dimension declared qb:sliceStructure. ASK qb:sliceStructure FILTER NOT IC-11. dimensions required qb:Observation value dimension declared associated qb:DataStructureDefinition. ASK qb:dataSet/qb:structure/qb:component/qb:componentProperty qb:DimensionProperty; FILTER NOT IC-12. duplicate observations qb:Observations same qb:DataSet have same value dimensions. ASK FILTER( # pair observations test dimension values are same SELECT AS qb:dataSet qb:dataSet FILTER qb:structure/qb:component/qb:componentProperty qb:DimensionProperty BIND( AS GROUP BY IC-13. Required attributes qb:Observation value declared attribute marked as required. ASK qb:dataSet/qb:structure/qb:component qb:componentRequired qb:componentProperty FILTER NOT IC-14. measures present qb:DataSet not use Measure dimension then individual qb:Observation have value declared measure. ASK # Observation non-measureType cube qb:dataSet/qb:structure FILTER NOT qb:component/qb:componentProperty qb:measureType # verify measure present qb:component/qb:componentProperty qb:MeasureProperty; FILTER NOT IC-15. Measure dimension consistent qb:DataSet uses Measure dimension then qb:Observation have value measure corresponding given qb:measureType. ASK # Observation measureType-cube qb:dataSet/qb:structure qb:measureType qb:component/qb:componentProperty qb:measureType # have value measureType FILTER NOT IC-16. Single measure measure dimension observation qb:DataSet uses Measure dimension then qb:Observation only have value measure IC-15 be measure corresponding qb:measureType). ASK # Observation measureType qb:dataSet/qb:structure qb:measureType # measure observation qb:component/qb:componentProperty qb:measureType qb:component/qb:componentProperty qb:MeasureProperty # be same as measureType FILTER IC-17. measures present measures dimension cube qb:DataSet uses Measure dimension then there Observation combination non-measure dimensions then there be other Observations same non-measure dimension values declared measures. ASK # Count number other measures found point SELECT AS # Find DSDs check many measures have SELECT AS qb:component/qb:componentProperty qb:MeasureProperty GROUP BY # Observation measureType cube qb:dataSet/qb:structure qb:dataSet qb:measureType # Other observation same dimension value qb:dataSet qb:measureType FILTER NOT qb:component/qb:componentProperty FILTER qb:measureType) qb:DimensionProperty FILTER GROUP BY HAVING IC-18. Consistent data set links qb:DataSet D qb:slice S, S qb:observation then qb:dataSet corresponding be D. ASK qb:slice qb:observation FILTER NOT qb:dataSet IC-19. Codes code list dimension property qb:codeList, then value dimension property qb:Observation be code list. following integrity check queries be applied RDF graph definition code list as as Data Cube be checked. caseof skos:ConceptScheme then concept be linked scheme usingskos:inScheme. case skos:Collection then thecollection link concept nested collections) using skos:member. thecollection uses skos:memberList then entailment skos:membervalues defined S36in be materialized before check applied. ASK qb:dataSet/qb:structure/qb:component/qb:componentProperty qb:DimensionProperty qb:codeList skos:ConceptScheme FILTER NOT skos:Concept skos:inScheme qb:dataSet/qb:structure/qb:component/qb:componentProperty qb:DimensionProperty qb:codeList skos:Collection FILTER NOT skos:Concept skos:member+ IC-20. Codes hierarchy dimension property hasa qb:HierarchicalCodeList anon-blank qb:parentChildProperty then value ofthat dimension property qb:Observationmust be reachable root hierarchy using more along qb:parentChildProperty links. check be made simple fixed SPARQL query. Instead aquery template supplied. instance template be generatedfor qb:HierarchicalCodeList IRIvalue qb:parentChildProperty.That binding followinginstantiation query: SELECT qb:HierarchicalCodeList qb:parentChildProperty FILTER isIRI(?p) template then instantiated replacing string IRI found instantiation query. template ASK qb:dataSet/qb:structure/qb:component/qb:componentProperty qb:DimensionProperty qb:codeList qb:HierarchicalCodeList FILTER NOT qb:hierarchyRoot/<$p>* IC-21. Codes hierarchy dimension property hasa qb:HierarchicalCodeList aninverse qb:parentChildProperty then value ofthat dimension property qb:Observationmust be reachable root hierarchy using more along inverse qb:parentChildProperty links. check be made simple fixed SPARQL query. Instead aquery template supplied. instance template be generatedfor qb:HierarchicalCodeList blank-nodevalue qb:parentChildProperty, associated inverse property.That binding followinginstantiation query: SELECT qb:HierarchicalCodeList; qb:parentChildProperty FILTER( isBlank(?pcp) owl:inverseOf FILTER( isIRI(?p) template then instantiated replacing string IRI found instantiation query. template ASK qb:dataSet/qb:structure/qb:component/qb:componentProperty qb:DimensionProperty qb:codeList qb:HierarchicalCodeList FILTER NOT qb:hierarchyRoot/(^<$p>)* Vocabulary reference DataSets Section Expressing data sets. Class: qb:DataSet Sub class qb:Attachable Equivalent scovo:Dataset Represents collection observations, possibly organized various slices, conforming common dimensional structure. Observations Section Expressing data sets. Class: qb:Observation Sub class qb:Attachable Equivalent scovo:Item single observation cube, have more associated measured values. Property: qb:dataSet Domain: qb:Observation Range: qb:DataSet data set observation part. Property: qb:observation Domain: qb:ObservationGroup Range: qb:Observation observation contained slice data set. Slices Section Slices. Class: qb:ObservationGroup possibly arbitrary, group observations. Class: qb:Slice Sub class qb:Attachable, qb:ObservationGroup Denotes subset DataSet defined fixing subset dimensional values, component properties Slice. Property: qb:slice Domain: qb:DataSet Range: qb:Slice; sub property qb:observationGroup subset DataSet defined fixing subset dimensional values. Property: qb:observationGroup Domain: Range: qb:ObservationGroup group observations. domain property left open so group be attached different resources need not be restricted single DataSet. Dimensions, Attributes, Measures Section Dimensions, attributes measures. Class: qb:Attachable Abstract superclass everything have attributes dimensions. Class: qb:ComponentProperty Sub class rdf:Property Abstract super-class properties representing dimensions, attributes measures. Class: qb:DimensionProperty Sub class qb:ComponentProperty, qb:CodedProperty class component properties represent dimensions cube. Class: qb:AttributeProperty Sub class qb:ComponentProperty class component properties represent attributes observations cube, e.g. unit measurement. Class: qb:MeasureProperty Sub class qb:ComponentProperty class component properties represent measured value phenomenon being observed. Class: qb:CodedProperty Sub class qb:ComponentProperty Superclass coded component properties. Reusable general purpose component properties Section Measure dimensions. Property: qb:measureType Domain: Range: qb:MeasureProperty Generic measure dimension, value dimension measure set measures DSD) being given observation. Data Structure Definitions Section ComponentSpecifications DataStructureDefinitions. Class: qb:DataStructureDefinition Sub class qb:ComponentSet structure DataSet slice. Property: qb:structure Domain: qb:DataSet Range: qb:DataStructureDefinition structure data set Property: qb:component Domain: qb:DataStructureDefinition Range: qb:ComponentSpecification component specification included structure dataset. Component specifications qualifying component use DSD Section ComponentSpecifications DataStructureDefinitions. Class: qb:ComponentSpecification Sub class qb:ComponentSet Used define properties component dimension etc) are specific usage DSD. Class: qb:ComponentSet Abstract class things reference more ComponentProperties Property: qb:componentProperty Domain: qb:ComponentSet Range: qb:ComponentProperty ComponentProperty attribute/dimension) expected DataSet, dimension fixed SliceKey. Property: qb:order Domain: qb:ComponentSpecification Range: xsd:int priority order components sets structure, used guide presentations lower order numbers come before higher numbers, un-numbered components come last. Property: qb:componentRequired Domain: qb:ComponentSpecification Range: xsd:boolean component property required optional context DSD. Only applicable components corresponding attribute. Defaults false Property: qb:componentAttachment Domain: qb:ComponentSpecification Range: rdfs:Class level component property be attached, be qb:DataSet, qb:Slice qb:Observation, qb:MeasureProperty. Property: qb:dimension Domain: Range: qb:DimensionProperty sub property qb:componentProperty alternative qb:componentProperty explicit component dimension. Property: qb:measure Domain: Range: qb:MeasureProperty sub property qb:componentProperty alternative qb:componentProperty explicit component measure. Property: qb:attribute Domain: Range: qb:AttributeProperty sub property qb:componentProperty alternative qb:componentProperty explicit component attribute. Property: qb:measureDimension Domain: Range: qb:DimensionProperty sub property qb:componentProperty alternative qb:componentProperty explicit component measure dimension. Slice definitions Section Slices. Class: qb:SliceKey Sub class qb:ComponentSet Denotes subset component properties DataSet are fixed corresponding slices. Property: qb:sliceStructure Domain: qb:Slice Range: qb:SliceKey slice key corresponding slice. Property: qb:sliceKey Domain: qb:DataStructureDefinition Range: qb:SliceKey slice key used slices dataset. Concepts Section Concept schemes code lists. Property: qb:concept Domain: qb:ComponentProperty Range: skos:Concept concept being measured indicated ComponentProperty. Property: qb:codeList Domain: qb:CodedProperty Range: owl:unionOf(skos:ConceptScheme skos:Collection qb:HierarchicalCodeList) code list associated CodedProperty. Non-SKOS Hierarchies Section Non-SKOS hierarchies. Class: qb:HierarchicalCodeList Represents generalized hierarchy concepts be used coding. hierarchy defined more roots together property concepts hierarchy child concept same concepts be members multiple hierarchies provided different qb:parentChildProperty values are used hierarchy. Property: qb:hierarchyRoot Domain: qb:HierarchicalCodeList root hierarchy. hierarchy have multiple roots have least Property: qb:parentChildProperty Domain: qb:HierarchicalCodeList Range: rdf:Property property parent concept hierarchy child concept. Note child have more parent. A. Acknowledgements work based collaboration was initiated aworkshop Publishing statistical datasets SDMX semanticweb, hosted ONS Sunningdale, United Kingdom February andcontinued ODaF workshop Tilburg. authors liketo thank participants workshops input intothis work especially Arofan Gregory patientexplanations SDMX insight need requirements core Data Cube representation. editors thank John Sheridan comments,suggestions support original work. Many individuals provided valuable comments specificationas made way W3C process. especially acknowledge contributions ofBenedikt Kaempgen, Sarven Capadisli Curran Kelleher. B. Change history Changes since W3C Proposed Recommendation December None. Corrected typo reference eg:Wales example Fixed broken SCOVO reference Added namespace, links vocabulary file, Abstract ease reference. Added missing closure rule infer rdf:type qb:DataSet use qb:Observation. Corrected mis-statement domain qb:sliceKey reference section correct rest specification). Corrected typo statement IC-8. Minor typographical corrections. Updated references, including moving Turtle non-normative reference. Removed CR specific text implementation feedback Risk features. Changes since W3C Last Call Working Draft March Section Modified diagram clarify qb:Slice sub class qb:ObservationGroup Section Moved description data set here greater clarity, was section Section Further clarified status COG RDF vocabularies. Example Retitled clarity. Section corrected multiple observations" multiple measures". Section Added mention qb:Attachable only mentioned vocabulary reference). Section Rewritten description handling multiple measures greater clarity. Section Removed reference vocabulary" not part specification. Section clarified special nature qb:measureType divergence SDMX. Section Change terminology external metadata" reference" metadata compatibility SDMX terminology. Section Clarified sub properties skos:narrower be used. Section Removed third bullet motivation qb:HierarchicalCodeList mutual exclusion). Added reference SDMX User Guide as additional background context. Added complete example Data Cube as appendix, providing link earlier document. Section Clarified abbreviated form option, there requirement use place normalized form. Section Corrected domain qb:observation qb:Slice qb:ObservationGroup, was given correctly ontology text body was mis-stated reference section. References. Updated ORG reference. Various typographical corrections. Changes since W3C Working Draft April Added section criteria well-formed cubes. ISSUE-29 Added section normalization algorithm handling abbreviated cubes. Added conformance section. Clarified qb:componentRequired only applicable attributes defaults optional. Moved vocabulary reference normative body specification, adding hyperlinks qb: terms. Added section non-skos hierarchies. ISSUE-31. Added note aggregation operations inter-cube relations are out scope version. ISSUE-30. Added qb:ObservationGroup as generalization qb:Slice. ISSUE-33. Removed qb:subSlice as being problematic interact attachment levels. ISSUE-34. Generalized range qb:codeList allow skos:Collection. ISSUE-39. Moved namespace definitions normative section body specification. Moved Jeni Tennison being listed as author being contributor. C. Complete example Data Cube complete Data Cube encoding running example introduced section uses abbreviated format so be concisely presented. passes integrity checks declaration sdmx-dimension:sex included so well-formed abbreviated Data Cube. @prefix rdf: .@prefix rdfs: .@prefix owl: .@prefix xsd: .@prefix skos: .@prefix void: .@prefix dct: .@prefix foaf: .@prefix org: .@prefix admingeo: .@prefix interval: .@prefix qb: .@prefix sdmx-concept: .@prefix sdmx-dimension: .@prefix sdmx-attribute: .@prefix sdmx-measure: .@prefix sdmx-metadata: .@prefix sdmx-code: .@prefix sdmx-subject: .@prefix ex-geo: .@prefix eg: Data Set qb:DataSet; dct:title expectancy"@en; rdfs:label expectancy"@en; rdfs:comment expectancy Welsh Unitary authorities extracted Stats Wales"@en; dct:description expectancy Welsh Unitary authorities extracted Stats Wales"@en; dct:publisher eg:organization dct:issued dct:subject sdmx-subject:3.2 # regional small area statistics sdmx-subject:1.4 # Health ex-geo:wales; # Wales qb:structure eg:dsd-le3 sdmx-attribute:unitMeasure qb:slice eg:slice1, eg:slice2, eg:slice3, eg:slice4, eg:slice5, eg:slice6 org:Organization, foaf:Agent; rdfs:label org"@en # Data structure definition qb:DataStructureDefinition; qb:component # dimensions qb:dimension eg:refArea; qb:order qb:dimension eg:refPeriod; qb:order qb:componentAttachment qb:Slice qb:dimension sdmx-dimension:sex; qb:order qb:componentAttachment qb:Slice # measure(s) qb:component qb:measure eg:lifeExpectancy]; # attributes qb:component qb:attribute sdmx-attribute:unitMeasure; qb:componentRequired qb:componentAttachment qb:DataSet; # slices qb:sliceKey eg:sliceByRegion eg:sliceByRegion qb:SliceKey; rdfs:label region"@en; rdfs:comment grouping regions together, fixing sex time values"@en; qb:componentProperty eg:refPeriod, sdmx-dimension:sex # Dimensions measures rdf:Property, qb:DimensionProperty; rdfs:label period"@en; rdfs:subPropertyOf sdmx-dimension:refPeriod; rdfs:range interval:Interval; qb:concept sdmx-concept:refPeriod rdf:Property, qb:DimensionProperty; rdfs:label area"@en; rdfs:subPropertyOf sdmx-dimension:refArea; rdfs:range admingeo:UnitaryAuthority; qb:concept sdmx-concept:refArea rdf:Property, qb:MeasureProperty; rdfs:label expectancy"@en; rdfs:subPropertyOf sdmx-measure:obsValue; rdfs:range xsd:decimal # Observations Column eg:slice1 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M qb:observation eg:o11, eg:o12, eg:o13, eg:o14 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o12 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy Column eg:slice2 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-F qb:observation eg:o21, eg:o22, eg:o23, eg:o24 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o22 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy Column eg:slice3 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M qb:observation eg:o31, eg:o32, eg:o33, eg:o34 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o32 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy Column eg:slice4 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-F qb:observation eg:o41, eg:o42, eg:o43, eg:o44 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o42 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy Column eg:slice5 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-M qb:observation eg:o51, eg:o52, eg:o53, eg:o54 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o52 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy Column eg:slice6 qb:Slice; qb:sliceStructure eg:sliceByRegion eg:refPeriod sdmx-dimension:sex sdmx-code:sex-F qb:observation eg:o61, eg:o62, eg:o63, eg:o64 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:newport_00pr eg:lifeExpectancy eg:o62 qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:cardiff_00pt eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:monmouthshire_00pp eg:lifeExpectancy qb:Observation; qb:dataSet eg:dataset-le3 eg:refArea ex-geo:merthyr_tdfil_00ph eg:lifeExpectancy D. References D.1 Normative references Dublin Core metadata initiative. Dublin Core metadata element set, version July Dublin Core recommendation. URL: Pascal Hitzler; Markus KrÃ¶tzsch; Bijan Parsia; Peter Patel-Schneider; Sebastian Rudolph. OWL Web Ontology Language Primer Edition). December W3C Recommendation. URL: Graham Klyne; Jeremy Carroll. Resource Description Framework Concepts Abstract Syntax. February W3C Recommendation. URL: Patrick Hayes. RDF Semantics. February W3C Recommendation. URL: Frank Manola; Eric Miller. RDF Primer. February W3C Recommendation. URL: Dan Brickley; Ramanathan Guha. RDF Schema January W3C Proposed Edited Recommendation. URL: S. Bradner. Key words use RFCs Indicate Requirement Levels. March Internet RFC URL: Alistair Miles; Sean Bechhofer. SKOS Simple Knowledge Organization System Reference. August W3C Recommendation. URL: Steven Harris; Andy Seaborne. SPARQL Query Language. March W3C Recommendation. URL: Paul Gearon; Alexandre Passant; Axel Polleres. SPARQL Update. March W3C Recommendation. URL: D.2 Informative references SDMX Contnent Oriented Guidelines, Fadi Maali; John Erickson. Data Catalog Vocabulary W3C Candidate Recommendation. November URL: Dan Brickley, Libby Miller. FOAF Vocabulary Specification August URL: Michael Hausenblas; Wolfgang Halb; Yves Raimond; Lee Feigenbaum; Danny Ayers. SCOVO: Using Statistics Web Data. URL: Linked Data, Online Analytical Processing Data Cubes, Dave Reynolds. Organzation Ontology. June W3C Candidate Recommendation. URL: Ordnance Survey Administrative Geography Ontology, Statistical Core Vocabulary, SDMX User Guide, Version January Statistical Data Metadata Exchange Initiative. URL: SDMX Information Model: UML Conceptual Design November Statistical Data Metadata Exchange Initiative. URL: Antoine Isaac; Ed Summers. SKOS Simple Knowledge Organization System Primer. August W3C Note. URL: Eric Prud'hommeaux; Gavin Carothers. RDF Turtle. January W3C Proposed Recommendation. URL: Keith Alexander; Richard Cyganiak; Michael Hausenblas; Jun Zhao. Describing Linked Datasets VoID Vocabulary. March W3C Note. URL: 