XML Linking Language Version XML Linking Language Version W3C Recommendation May version: Latest version: Previous versions: Editors: Steve DeRose, Brown University Scholarly Technology Group Eve Maler, Sun Microsystems David Orchard, Jamcracker Norman Walsh, Mark Logic Corporation Version refer errata document, include normative corrections. also translations. document also available non-normative formats: XML. Copyright W3CÂ® ERCIM, Keio),All Rights Reserved. W3C liability, trademark document use rules apply. Abstract specification XML Linking Language Version elements be inserted XML documents order create describe links resources. uses XML syntax create structures describe links similar simple unidirectional hyperlinks today's HTML, as as more sophisticated links. Status Document section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index document W3C Recommendation. implements XLink requirements documented XLink document product XML Core Working Group as part W3C XML Activity. edition previous W3C Recommendation June report errors document public mailing list; public archives are available. There Implementation Report XLink Test Suite maintained help assessing conformance specification. document been reviewed W3C Members, software developers, other W3C groups interested parties, endorsed Director as W3C Recommendation. stable document be used as reference material cited document. W3C's role making Recommendation draw attention specification promote widespread deployment. functionality interoperability Web. document was produced group operating February W3C Patent Policy. W3C public list patent disclosures made connection deliverables group; page also instructions disclosing patent. individual actual knowledge patent individual believescontains Essential Claim(s) disclose information accordance section W3C Patent Policy. Table Contents Introduction Origin Goals XLink Concepts Links Resources Arcs, Traversal, Behavior Resources Relation Physical Location Linking Element XLink Processing Conformance Processing Dependencies Markup Conformance Application Conformance Full Conformance Simple Conformance XLink Markup Design XLink Attribute Usage Patterns XLink Element Type Relationships Attribute Value Defaulting Integrating XLink Usage Other Markup Using XLink Legacy Markup XLink Elements Attributes Extended Links Element) Local Resources Extended Link Element) Remote Resources Extended Link Element) Traversal Rules Extended Link Element) Titles Extended Links, Locators, Arcs Element) Locating Linkbases Arc Role) Simple Links Element) XLink Element Type Attribute Locator Attribute Semantic Attributes arcrole, title) Behavior Attributes actuate) show Attribute actuate Attribute Traversal Attributes Appendices References A.1 Normative References A.2 Non-Normative References B Sample DTD C Sample XML Schema D Sample RELAX NG Grammar E Changes XLink Introduction specification XML Linking Language elements be inserted XML documents order create describe links resources. XLink framework creating basic unidirectional links more complex linking structures. XML documents Assert linking relationships more resources Associate metadata link Express links reside location separate linked resources important application XLink hypermedia systems have hyperlinks. simple case hyperlink HTML element, characteristics: hyperlink uses IRIs as locator technology. hyperlink expressed ends. hyperlink other end server have great freedom finding dynamically creating destination). Users initiate traversal only end hyperlink expressed other end. hyperlink's effect windows, frames, go-back lists, style sheets use, so determined user agents, not hyperlink example, traversal links normally current view, perhaps user option open new window. set characteristics powerful, model limits range possible hyperlink functionality. model defined specification shares HTML use IRI technology, HTML offering features, previously available only dedicated hypermedia systems, make hyperlinking more scalable flexible. providing linking data structures, XLink minimal link behavior model; higher-level applications layered XLink willoften specify alternate more sophisticated rendering processing treatments. Integrated treatment specialized links used other technical domains, such as foreign keys relational databases reference values programming languages, outside scope specification. languages, such as wish identify hypertext links document, suggest local element XLink traversal possible, application treats as specified actuate="onRequest", be treated as hyperlink source anchor. Origin Goals design XLink been informed knowledge established hypermedia systems standards. following standards have been especially influential: HTML several element types represent links. HyTime inline inbound third-party link structures semantic features, including traversal control presentation objects. Text Encoding Initiative Guidelines structures creating links, aggregate objects, link collections. Many other linking systems have also informed design XLink, especially XLink Requirements Document thorough explanation requirements design XLink. XLink Concepts section terms concepts are essential understanding XLink, discussing syntax used create XLink constructs. few additional terms are introduced later parts specification. Links Resources XLink link explicit relationship resources portions resources.] made explicit XLink linking element, XLink-conforming XML element existence link.] There are XLink elements; only are considered linking elements. others provide various pieces information thatdescribe characteristics link. term as used specification only XLink link, though nothing non-XLink constructs serving as links.) notion resources universal World Wide Web. discussed resource addressable unit information service.] Examples include files, images, documents, programs, query results. means used addressing resource IRI Resource Identifier) reference more Locator Attribute(href)). possible address portion resource. example, whole resource XML document, useful portion resource be particular element inside document. Following link result, example, highlighting element scrolling point document. link associates set resources, resources are said participate link.] Even though XLink links appear XML documents, are able associate kinds resources, not just XML-encoded ones. common uses XLink create hyperlinks. hyperlink link intended primarily presentation human user.] Nothing XLink's design, however, being used links are intended solely consumption computers. Arcs, Traversal, Behavior Using following link purpose called traversal.] Even though kinds link associate arbitrary numbers resources, traversal always pair resources portions source traversal begun starting resource] destination ending resource]. Note term used fashion times apply resource portion, not whole resource. Information about traverse pair resources, including direction traversal possibly application behavior information as called arc]. arcs link specify same pair resources, switch places as starting ending resources, then link multidirectional, not same as merely back" after traversing link. Resources Relation Physical Location Linking Element local resource XML element link virtue having as parent, being linking element]. resource resource portion link virtue being addressed IRI reference considered remote resource, even same XMLdocument as link, even inside same linking element.] Put way, local resource specified value," remote resource specified reference." arc local starting resource remote ending resource outbound, away linking element.] links such arc are HTML element, HyTime Text Encoding Initiative XREF elements.) arc's ending resource local starting resource remote, then thearc inbound.] starting resource ending resource local, then arc third-party arc.] not required, link typically only kind arc thus be referred as inbound, outbound, third-party link. create link resource do not have choose not exercise) write access, resource offers way embed linking constructs, necessary use inbound third-party arc. such arcs are used, requirements discovery link are greater outbound arcs. Documents containing collections inbound third-party links are called link databases, orlinkbases.] XLink Processing Conformance section details processing conformance requirements XLink applications markup. key words not, required, not, not, recommended, optional specification are be interpreted as described Processing Dependencies XLink processing Names], Base], Fundamentals]. Markup Conformance XML element XLink type attribute XLink namespace value conformance constraints imposed chosen XLink element type, as prescribed specification, not have type attribute XLink namespace conformance constraints imposed XLink simple element type, as prescribed specification. not have attributes XLink namespace other type, href, role, arcrole, title, show, actuate, label, Content conforming XLink conform Fundamentals]. specification particular constraints schemas; conformance only elements attributes. Application Conformance XLink application software module well-formed XML documents containing XLink elements attributes, XML information sets containing information items properties corresponding XLink elements attributes. document elements attributes, specifications herein apply information set equivalents as XLink conformance levels XLink application, simple full. Full Conformance application constraints full conformance mandatory conditions applications set forth specification, recommended optional conditions observe, way prescribed, markup conformance testing according conformance constraints appearing specification. XLink semantics only elements satisfy markup conformance criteria outlined Markup Conformance. Applications implementing XLink conform Fundamentals]. Simple Conformance application constraints simple conformance fully conformant respect simple links. other words: processor ignore link xlink:type other xlink:href attribute specified xlink:type attribute not specified, element be processed as xlink:type specified application claims simple conformance ignore other XLink elements. XLink Markup Design section design XLink's markup vocabulary. Link markup needs be recognized reliably XLink applications order be traversed handled properly. XLink uses mechanism described Namespaces XML Recommendation Names] accomplish recognition constructs XLink vocabulary. XLink namespace defined specification following URI: dictated Names], use XLink elements attributes declaration XLink namespace. example, following declaration make prefix xlink available myElement element represent XLink namespace: xmlns:xlink="http://www.w3.org/1999/xlink"> Note: Most code examples specification do not show XLink namespace declaration. xlink prefix used stand declaration XLink namespace elements scope so-marked attribute same element bears attribute ancestor element), not XLink namespace declaration present example. XLink's namespace global attributes use elements are arbitrary namespace. global attributes are type, href, role, arcrole, title, show, actuate, label, other attributes, elements, XLink namespace are reserved. Document creators use XLink global attributes make elements own namespace,or even namespace do not control, recognizable as XLink elements. type attribute XLink element type extended, locator, arc, resource, title); element type dictates XLink-imposed constraints such element follow behavior XLink applications encountering element. Following example crossReference element non-XLink namespace XLink global attributes: xmlns:my="http://example.com/" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="students.xml" xlink:role="http://www.example.com/linkprops/studentlist" xlink:title="Student List" xlink:show="new" xlink:actuate="onRequest">Current List Students</my:crossReference> Using global attributes always use namespace prefixes individual attributes. Linking Language Version XLink elements are identified presence xlink:type attribute. XLink XLink elements are identified presence either xlink:type attribute xlink:href attribute: element xlink:type attribute, then attribute have following values: element adhere conformance constraints imposed XLink element type. element xlink:href attribute not have xlink:type attribute, then treated exactly as had xlink:type attribute value XLink Attribute Usage Patterns XLink attributes are considered global virtue use namespace mechanism, allowed combinations XLink element type depend greatly value special type attribute XLink Element Type Attribute more information) element appear. conformance constraint notes specification detail allowed usage patterns. Following summary element types(columns) global attributes are allowed, indication value required optional simple extended locator arc resource title type R R R R R href R role arcrole title show actuate label least type href be specified. also B Sample DTD, C Sample XML Schema, D Sample RELAX NG Grammar examples non-normative schemas illustrate allowed patterns attributes.) specification uses convention element" refer elements adhere named set constraints associated XLink element type, matter name element actually example, element" refer following elements: xlink:type="locator" xlink:type="locator" xlink:type="locator" XLink Element Type Relationships Various XLink element types have special meanings dictated specification appear as direct children other XLink element types. Following summary child element types play significant role particular parent element types. combinations are not conformant.) Parent type Significant child types simple none extended locator, arc, resource, title locator title arc title resource none title none Attribute Value Defaulting Using XLink potentially using large number attributes supplying important link information. cases values desired XLink attributes are unchanging individual instances documents certain type, attribute value defaults not) be added DTD schema so attributes do not have appear physically element start-tags. example, attribute defaults were provided thexmlns:xlink, xmlns:my, type, show, actuate attributes example introduction XLink Markup Design, example look as xlink:href="students.xml" xlink:role="http://www.example.com/linkprops/studentlist" xlink:title="Student List">Current List Students</my:crossReference> Information sets have been created control DTD have attribute values filled Note, however, parsers are not required process external subset. Applications, such as web browsers, do not process external subset not be aware default values identified therein. Note also using attribute value default technique specify XLink namespace declaration equivalent NG], Schema Part Structures], other modern schema languages. be used DTD-informed parsing performed, poses interoperability risk be used care. Integrating XLink Usage Other Markup specification only attributes attribute values XLink namespace. There restriction using non-XLink attributes XLink attributes. addition, most XLink attributes are optional choice simple extended link up markup designer document creator, so DTD other schema uses XLink features need not use declare entire set XLink's attributes. Finally, specification minimum constraints XLink markup,schemas use XLink are free tighten constraints. use XLink not absolve valid document conforming constraints expressed governing schema. Following example crossReference element XLink non-XLink attributes: xmlns:my="http://example.com/" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="students.xml">Current List Students</my:crossReference> Using XLink Legacy Markup XLink's global attributes require use namespace prefixes, non-XLink-based links legacy documents generally do not serve as conforming XLink constructs as stand, even attribute value defaulting used. example, XHTML element href attribute, because attribute local attached element XHTML namespace, not same as xlink:href global attribute XLinknamespace. specification XLink markup, combinations XLink attributes arrangements elements XLink attributes are conformant. also XLink semantics such conformant markup. XLink used elements have other attributes related elements linking semantics, XLink not not attempt define semantics such combinations. element such possibly conflicting markup occur, specify semantics result. XLink Elements Attributes XLink offers kinds links: Extended links Extended links offer full XLink functionality, such as inbound third-party arcs, as as links have arbitrary numbers participating resources. result, structure be fairly complex, including elements pointing remote resources, elements containing local resources, elements specifying arc traversal rules, elements specifying human-readable resource arc titles. XLink way give extended link special semantics finding linkbases; used fashion, extended link XLink application process other links. Simple links Simple links offer shorthand syntax common kind link, outbound link exactly participating resources category HTML-style IMG links fall). simple links offer less functionality extended links, have special internal structure. simple links are conceptually subset extended links, are syntactically different. example, convert simple link extended link, several structural changes be needed. following sections define XLink elements attributes. Extended Links Element) extended link link associates arbitrary number resources. participating resources be combination remote local.] only kind link able have inbound third-party arcs extended link. Typically, extended linking elements are stored separately resources associate example, entirely different documents). Thus, extended links are important situations participating resources are read-only, expensive modify update inexpensive modify update separate linking element, resources are formats nativesupport embedded links as many multimedia formats). following diagram shows extended link associates remote resources. represent, example, information about student's course load: resource being description student, being description student's academic advisor, resources representing courses student attending, last resource representing course student auditing. extended link, resources be entirely unrelated; example, be separate documents. lines emanating extended link represent association resources. However, notice lines do not have directionality. Directionality expressed traversal rules; such rules being provided, resources are associated particular order, implication as individual resources are accessed. following diagram shows extended link associates remote resources local resource special element inside extended link element). represent same sort course-load example as described above, addition student's grade point average stored locally. Again, lines represent mere association resources, traversal directions behaviors implied. XLink element type extended links element attribute XLink namespace called type value extended-type element contain mixture following elements order, possibly along other content markup: locator-type elements address remote resources participating link arc-type elements provide traversal rules link's participating resources title-type elements provide human-readable labels link resource-type elements supply local resources participate link not error extended-type element associate fewer resources. link only participating resource, none simply untraversable. Such link still be useful, example, associate properties single resource means XLink attributes, provide placeholder link information be populated eventually. Subelements simple extended type anywhere inside parent extended-type element are not conformant. Subelements locator, arc, resource type are not direct children extended-type element are not conformant. extended-type element have semantic attributes role title Semantic Attributes arcrole, title)). supply semantic information about link as whole; role attribute property entire link title attribute human-readable description entire link. notconformant other XLink attributes be present element. title attribute more title-type elements are present, have XLink-specified relationship; higher-level application built XLink likely want specify appropriate treatment example, precedence) case. Example: Sample extended-Type Element Declarations Instance Following non-normative set DTD declarations extended-type element subelements. Parts example are reused specification. Note type attribute other attributes are defaulted DTD order highlight attributes are changing basis. courseload courseload xmlns:xlink CDATA #FIXED xlink:type #FIXED xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED><!ELEMENT tooltip tooltip xlink:type #FIXED xml:lang CDATA #IMPLIED><!ELEMENT person EMPTY><!ATTLIST person xlink:type #FIXED xlink:href CDATA #REQUIRED xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED xlink:label NMTOKEN #IMPLIED><!ELEMENT course EMPTY><!ATTLIST course xlink:type #FIXED xlink:href CDATA #REQUIRED xlink:role CDATA #FIXED xlink:title CDATA #IMPLIED xlink:label NMTOKEN #IMPLIED><!-- GPA point average" gpa gpa xlink:type #FIXED xlink:role CDATA #FIXED xlink:title CDATA #IMPLIED xlink:label NMTOKEN #IMPLIED><!ELEMENT go EMPTY><!ATTLIST go xlink:type #FIXED xlink:arcrole CDATA #IMPLIED xlink:title CDATA #IMPLIED xlink:show #IMPLIED xlink:actuate #IMPLIED xlink:from NMTOKEN #IMPLIED xlink:to NMTOKEN #IMPLIED> Following XML elements using declarations look. Load Pat Jones</tooltip> xlink:href="students/patjones62.xml" xlink:label="student62" xlink:role="http://www.example.com/linkprops/student" xlink:title="Pat Jones" xlink:href="profs/jaysmith7.xml" xlink:label="prof7" xlink:role="http://www.example.com/linkprops/professor" xlink:title="Dr. Jay Smith" more remote resources professors, teaching assistants, etc. xlink:href="courses/cs101.xml" xlink:label="CS-101" xlink:title="Computer Science more remote resources courses, seminars, etc. xlink:label="PatJonesGPA">3.5</gpa> xlink:from="student62" xlink:to="PatJonesGPA" xlink:show="new" xlink:actuate="onRequest" xlink:title="Pat Jones's GPA" xlink:from="CS-101" xlink:arcrole="http://www.example.com/linkprops/auditor" xlink:to="student62" xlink:show="replace" xlink:actuate="onRequest" xlink:title="Pat Jones, auditing course" xlink:from="student62" xlink:arcrole="http://www.example.com/linkprops/advisor" xlink:to="prof7" xlink:show="replace" xlink:actuate="onRequest" xlink:title="Dr. Jay Smith, advisor" Local Resources Extended Link Element) extended link participating local resources means special subelements appear inside extended link. entire subelement, together contents, up local resource. XLink element local resources element attribute XLink namespace called type value resource-type element have content; content present XLink-specified relationship link. possible resource-type element have content; cases as starting resource expected be traversed request, interactive XLink applications typically generate content order give user way initiate traversal. resource-typeelement anything other extended-type element parent, resource-type element not conformant. resource-type element have semantic attributes role title Semantic Attributes arcrole, title)) traversal attribute label Traversal Attributes semantic attributes supply information about resource generic terms, outside context aparticular arc role attribute property resource, title attribute human-readable description resource. label attribute way arc-type element refer creating traversal arc. Example: Sample resource-Type Element Declarations Instance Following non-normative set RELAX NG declarations compact syntax) resource-type element. namespace xlink element gpa attlist.gpa, attribute xlink:type attribute xlink:role string attribute xlink:title text attribute xlink:label xsd:NMTOKEN attribute text text)* Following XML element using declarations look. xlink:type="resource" xlink:role="http://www.example.com/linkprops/gpa" xlink:label="PatJonesGPA">3.5</gpa> Remote Resources Extended Link Element) extended link remote resources participate means locator elements. XLink element locators element attribute XLink namespace called type value locator-type element have content. Other title-type elements are direct children Titles Extended Links, Locators, Arcs Element)), content present XLink-specified relationship link. locator-type element nested XLink elements, such contained elements have XLink-specified relationship theparent link. locator-type element anything other extended-type element parent, locator-type element not conformant. Constraint: Attributes Locator Element locator-type element have locator attribute Locator Attribute locator attribute have value supplied. locator-type element have semantic attributes role title Semantic Attributes arcrole, title)) traversal attribute label Traversal Attributes locator attribute IRI reference remote resource. semantic attributes supplyinformation about resource generic terms, outside context particular arc role attribute property resource title attribute human-readable description resource. label attribute way arc-type element refer creating traversal arc. Note: locator-type element, not constitute link just because locator attribute; simple-type element, not create XLink-governed association referenced resource. Example: Sample locator-Type Element Declarations Instance Following non-normative set XML Schema declarations locator-type element. xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" targetNamespace="" elementFormDefault="qualified"> namespace="http://www.w3.org/1999/xlink"/> name="person"> base="xs:anyType"> ref="xlink:type" fixed="locator"/> ref="xlink:href" use="required"/> ref="xlink:role"/> ref="xlink:title"/> ref="xlink:label"/> name="course"> base="xs:anyType"> ref="xlink:type" fixed="locator"/> ref="xlink:href" use="required"/> ref="xlink:role" fixed="http://www.example.com/linkprops/course"/> ref="xlink:title"/> ref="xlink:label"/> Following XML elements using declarations look. xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="students/patjones62.xml" xlink:label="student62" xlink:role="http://www.example.com/linkprops/student"xlink:title="Pat Jones" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="profs/jaysmith7.xml" xlink:label="prof7" xlink:role="http://www.example.com/linkprops/professor" xlink:title="Dr. Jay Smith" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="courses/cs101.xml" xlink:label="CS-101" xlink:title="Computer Science Traversal Rules Extended Link Element) extended link indicate rules traversing participating resources means series optional arc elements. XLink element arcs element attribute XLink namespace called type value arc-type element have content. Other title-type elements are direct children Titles Extended Links, Locators, Arcs Element)), content present XLink-specified relationship link. arc-type element anything other extended-type element parent, arc-typeelement not conformant. arc-type element have traversal attributes Traversal Attributes behavior attributes show actuate Behavior Attributes actuate) semantic attributes arcrole title Attributes arcrole, title)). traversal attributes define desired traversal pairs resources participate same link, resources are identified label attribute values. attribute resources traversal be initiated, starting resources, attribute resources be traversed ending resources. behavior attributes specify desired behavior XLink applications use traversing ending resource. semantic attributes describe meaning arc's ending resource relative starting resource. arcrole attribute notion property, role be interpreted as stating arc-role ending-resource." contextual role differ meaning ending resource taken outside context particular arc. example, resource mightgenerically represent context particular arc have role context different arc have role same resource as starting resource several arcs single link many links), traversal-request behavior unconstrained specification, possibility interactive applications pop-up menu lists relevant arc link titles. following diagram shows extended link associates remote resources rules traversal arcs specified are third-party arcs; arcs go exclusively remote resources. nondirectional solid lines indicate, as before, link associating resources; new dotted arrows indicate traversal rules link Notice resources share same label value. diagram directional traversal arcs created following settings, Cs are allowed initiate traversal Bs. labels appear several resources, arc specification potentially several traversal arcs once: xlink:type="arc" xlink:from="A" xlink:to="B" xlink:type="arc" xlink:from="C" xlink:to="B" example, assume extended link locators, label values label values xlink:type="extended"> xlink:type="locator" xlink:href="..." xlink:label="parent" xlink:title="p1" xlink:type="locator" xlink:href="..." xlink:label="parent" xlink:title="p2" xlink:type="locator" xlink:href="..." xlink:label="child" xlink:title="c1" xlink:type="locator" xlink:href="..." xlink:label="child" xlink:title="c2" xlink:type="locator" xlink:href="..." xlink:label="child" xlink:title="c3" arc-type elements go here following traversal parent resources child resources, p1-c1, p1-c2, p1-c3, p2-c1, p2-c2, p2-c3: xlink:type="arc" xlink:from="parent" xlink:to="child" value supplied attribute, missing value interpreted as standing labels supplied locator-type elements extended-type element. example, following traversal parents children also children children, p1-c1, p1-c2, p1-c3, p2-c1, p2-c2, p2-c3, c1-c1, c1-c2, c1-c3, c2-c1, c2-c2, c2-c3, c3-c1, c3-c2, c3-c3: xlink:type="arc" xlink:to="child" case, note traversal rules include arcs resources other resources same label children other children), as as resources child not error. arc-type elements are provided extended link, then extension missing values are interpreted as standing labels link. be equivalent following traversal specification: xlink:type="arc" more locator same label, set locators same label are be understood as individual locators, rather as referring aggregate resource; traversal behavior such link be same as link locators have different roles appropriate arcs are specified produce identical traversal pairs. arc traversal rules extended link leave out possible traversal pairs, XLink traversal pairs. higher-level application perform non-XLink-directed traversals; example, link-checking process traverse available pairs resources. Constraint: Arc Duplication arc-type element have pair values not repeat values other arc-type element same extended link; pair link be unique. Example: Sample arc-Type Element Declarations Instance Following non-normative set RELAX NG declarations arc-type element. xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"> name="go"> name="go"> name="attlist.go"/> name="attlist.go" combine="interleave"> name="xlink:type" name="xlink:arcrole"/> name="xlink:title"/> name="xlink:show"> name="xlink:actuate"> name="xlink:from"> type="NCNAME"/> name="xlink:to"> type="NCNAME"/> Following XML elements using declarations look. xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="arc" xlink:from="student62" xlink:to="PatJonesGPA" xlink:show="new" xlink:actuate="onRequest" xlink:title="Pat Jones's GPA" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="arc" xlink:from="CS-101" xlink:arcrole="http://www.example.com/linkprops/auditor" xlink:to="student62" xlink:show="replace" xlink:actuate="onRequest" xlink:title="Pat Jones, auditing course" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="arc" xlink:from="student62" xlink:arcrole="http://www.example.com/linkprops/advisor" xlink:to="prof7" xlink:show="replace" xlink:actuate="onRequest" xlink:title="Dr. Jay Smith, advisor" Titles Extended Links, Locators, Arcs Element) extended-, locator-, arc-type elements have title attribute about Semantic Attributes arcrole, title)). However, also have series more title-type elements. Such elements are useful, example, cases human-readable label informationneeds further element markup, multiple titles are necessary. common motivation using title-type element account internationalization localization. example, title markup be necessary bidirectional contexts East Asian languages, multiple titles be necessary different natural-language versions title. Annotation] examples markup be necessary inside title. XLink element titles element attribute XLink namespace called type value title-type element have content. title-type element nested XLink elements, such contained elements have XLink-specified relationship parent link containing title. title-type element anything other extended-, locator-, arc-type element parent, title-type element not conformant. Example: Sample title-Type Element Declarations Instance Following non-normative set XML Schema declarations title-type element. element been given xml:lang attribute, be used conjunction server settings other contextual information determining title present. xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" targetNamespace="" elementFormDefault="qualified"> namespace="http://www.w3.org/1999/xlink"/> namespace="http://www.w3.org/XML/1998/namespace"/> name="advisorname"> ref="name"/> ref="xlink:type" fixed="title"/> ref="xml:lang"/> name="name"> ref="honorific" minOccurs="0" maxOccurs="1"/> ref="given"/> ref="family"/> advisor locator type element name="advisor"> ref="advisorname"/> ref="xlink:type" fixed="locator"/> ref="xlink:href" use="required"/> ref="xlink:role"/> ref="xlink:title"/> ref="xlink:label"/> Arbitrary declarations components name name="honorific" type="xs:string"/> name="given" type="xs:string"/> name="family" type="xs:string"/></xs:schema> Following XML elements using declarations look. xlink:href="profs/jaysmith7.xml" xml:lang="en"> <family>Smith</family> Locating Linkbases Arc Role) XLink application traverse starting resource ending resource, needs locate starting resource link. Locating pieces not problem case outbound arcs because starting resource either linking element child linking element. However, case inbound third-party arcs, XLink application needs be able find pieces somehow. course load example, extended links associate pairs remote resources representing students courses. order system load present resource" as description picture person) way offers traversal related information example, allowing users click student's name traverse information about courses enrolled), needs locate use extended links contain association. Linkbases are often used make link management easier gathering together number related linking elements. XLink way instruct XLink applications access potentially relevant linkbases. instruction form arc specification explicit extended link, implicit simple link) following value arcrole attribute: Constraint: Linkbases Be XML linkbase specified as ending resource arc special value be XML document. applications also use other means locate process additional linkbases.) handling linkbase arc much handling normal arc, traversal loading ending resource linkbase) extract links later use, rather present user perform other processing. handling also special XLink applications suspend traversal linkbase arcs user option. Specifically, loading linkbase arc, XLink application keep track starting resource document containing starting resource loaded traversal linkbase arc actuated, application access linkbase extract extended links found inside case extracted resource portion complete XML document, such as rangeor string range, only extended links completely contained extracted portion be made available. timing linkbase arc traversal value actuate attribute arc. example, value linkbase loaded links extracted as soon as starting resource loaded. show attribute value linkbase arc be ignored, because traversal not entail presentation case. Linkbases be chained virtue serving as starting resource yet linkbase arc. application interpreting initial linkbase arc choose limit number steps processed chain. application maintain list extended links retrieved as result processing linkbase, not retrieve duplicate resources links case cyclic dependency ease XLink processing, document creators wish define linkbase arcs near beginning document. Example: Annotating Specification Following non-normative set declarations extended link providing linkbase arcs: basesloaded basesloaded xlink:type #FIXED startrsrc EMPTY><!ATTLIST startrsrc xlink:type #FIXED xlink:href CDATA #REQUIRED xlink:label NMTOKEN #IMPLIED><!ELEMENT linkbase EMPTY><!ATTLIST linkbase xlink:type #FIXED xlink:href CDATA #REQUIRED xlink:label NMTOKEN #IMPLIED><!ELEMENT load EMPTY><!ATTLIST load xlink:type #FIXED xlink:arcrole CDATA #FIXED xlink:actuate #IMPLIED xlink:from NMTOKEN #IMPLIED xlink:to NMTOKEN #IMPLIED> Following XML element using declarations look. indicate specification document loaded, linkbase full annotations automatically be loaded as possibly necessitating re-rendering entire specification document reveal regions serve as starting resources links found linkbase. xlink:label="spec" xlink:href="spec.xml" xlink:label="linkbase" xlink:href="linkbase.xml" xlink:from="spec" xlink:to="linkbase" actuate="onLoad" Following XML element using declarations look linkbase loading were request. time, starting resource words here reveal annotations." starting resource were entire document as example above, reasonable behavior allowing user actuate traversal be confirmation dialog box. xlink:label="spec" xlink:href="spec.xml#string-range(//*,'Click here reveal annotations.')" xlink:label="linkbase" xlink:href="linkbase.xml" xlink:from="spec" xlink:to="linkbase" actuate="onRequest" Simple Links Element) simple link link associates exactly resources, local remote, arc going former latter. Thus, simple link always outbound link.] purpose simple link be convenient shorthand equivalent extended link. single simple linking element basic functions extended-type element, locator-type element, arc-type element, resource-type element. following diagram shows characteristics simple link; associates local remote resource, implicitly single traversal arc local resource remote represent, example, name student appearing text clicked, information about student. Example: Simple Link Functionality Done Extended Link simple link be represented extended link approximately following way: xlink:type="extended"> xlink:type="resource" xlink:label="local">Pat Jones</resource> xlink:type="locator" xlink:href="..." xlink:label="remote" xlink:role="..." xlink:title="..." xlink:type="arc" xlink:from="local" xlink:to="remote" xlink:arcrole="..." xlink:show="..." xlink:actuate="..." simple link features above types labels) single element. cases only subset features required, XLink simple linking element available as alternative extended linking element. features missing simple links are as Supplying arbitrary numbers local remote resources Specifying arc remote resource local resource Associating title single hardwired arc Associating role title local resource Associating role title link as whole XLink element simple links element: attribute XLink namespace called type value attribute XLink namespace called href attribute XLink namespace called type. case, value implied type attribute. other words, XLink type attribute optional XLink simple links. simple equivalent above extended link be as xlink:href="...">Pat Jones</studentlink> simple-type element have content. simple-type element together content, local resource link, as element were resource-type element. simple-type element nested XLink elements, such contained elements have XLink-specified relationship parent link. possible simple-type element have content; incases link expected be traversed request, interactive XLink applications typically generate content order give user way initiate traversal. simple-type element effectively locator attribute href semantic attributes role title locator-type element, behavior attributes show actuate single semantic attribute arcrole arc-type element. not error simple-type element have locator attribute value. value not provided, link simply untraversable. Such link still be useful, example, associate properties resource means XLink attributes. Example: Sample simple-Type Element Declarations Instance Following non-normative set RELAX NG declarations compact syntax) simple-type element. namespace xlink element studentlink attlist.studentlink, attribute xlink:type attribute xlink:href text attribute xlink:role string attribute xlink:arcrole text attribute xlink:title text attribute xlink:show attribute xlink:actuate attribute text text)* Following XML document use declarations. xlink:href="students/patjones62.xml">PatJones</studentlink> popular around student union. XLink Element Type Attribute attribute XLink element types type. Constraint: type Value value type attribute be supplied element simple link href attribute XLink namespace supplied. latter case, value implied type attribute. value supplied type attribute, value be value type attribute element XLink-specified meaning, XLink-related content attributes have XLink-specified relationship element. Example: Sample type Attribute Declarations Following non-normative attribute-list declaration type element intended be simple-type. simple-link-element xlink:type #FIXED analogous declaration XML Schema name="simple-link-element"> ref="xlink:type" fixed="simple"/> RELAX NG: element simple-link-element attribute xlink:type element as XLink element only occasions, declaration be as document creator sets value circumstances others. use be useful helping XLink applications avoid checking presence href value. commandname xlink:type #IMPLIED xlink:href CDATA #IMPLIED> Analogously RELAX NG: element commandname attribute xlink:type global nature xlink:type redefinition basis impractical XML Schema. Locator Attribute attribute supplies data XLink application find remote resource resource fragment) href. be used simple-type elements, be used locator-type elements. value href attribute extended IRIs] Processing relative identifier base handled straightforwardly; algorithms be applied directly, treating characters additionally allowed LEIRIs same way unreserved characters are URI references. Note: XLink explicitly did not require applications check value xlink:href attribute conformed syntactic rules URI. clarified syntactic rules, specification lead XLink many other specifications) not impose new conformance testing requirements XLink applications area. XLink applications need not enforce URI syntactic constraints, XLink applications use libraries do detect violations syntactic rules not recover silently. value href attribute relative reference defined also known as URI" earlier RFCs), results relative reference after escaping, absolute version be computed method Base] before use. locator fragment identifer, syntax fragment identifier defined media type representation returned locator dereferenced. locators XML resources resources media type media types defer fragment identifier syntax media), syntax fragment identifier expected be defined successor Technically, there nofragment identifier syntax XML resources time writing, though Framework] element() Scheme] are explicitly supported several XML vocabularies. Example: Sample href Attribute Declarations Following non-normative attribute-list declaration href element intended be simple-type. simplelink xlink:href CDATA #REQUIRED Semantic Attributes arcrole, title) attributes describe meaning resources context link are role, arcrole, title. role attribute be used extended-, simple-, locator-, resource-type elements. arcrole attribute be used arc- simple-typeelements. title attribute be used types elements. value role arcrole attribute extended IRIs]. identifier not be relative. title attribute used describe meaning link resource human-readable fashion, along same lines as role arcrole attribute. also Titles Extended Links, Locators, Arcs Element).) value optional; value supplied, contain string resource. use information ishighly dependent type processing being done. be used, example, make titles available applications used visually impaired users, create table links, present help text user mouse pointer hover over starting resource. Example: Sample role title Attribute Declarations Following non-normative attribute-list declaration role title element intended be simple-type. simplelink xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED Following non-normative attribute-list declaration arcrole title element intended be arc-type. go xlink:arcrole CDATA #IMPLIED xlink:title CDATA #IMPLIED Behavior Attributes actuate) behavior attributes are show actuate. be used simple- arc-type elements. used simple-type element, signal behavior intentions traversal link's single remote ending resource. are used arc-type element, signal behavior intentions traversal ending resources remote) are specified bythat arc. show actuate attributes are not required. Example: Sample show actuate Attribute Declarations Following non-normative attribute-list declaration show actuate element intended be simple-type. simplelink xlink:type #FIXED xlink:show #IMPLIED xlink:actuate #IMPLIED Applications encountering arc-type elements linkbase lists treat behavior attributes as were specified as show="none" actuate="onLoad", even other values were specified. show Attribute show attribute used communicate desired presentation ending resource traversal starting resource. Constraint: show Value value supplied show attribute, be values Conforming XLink applications apply following treatment show values: application traversing ending resource load new window, frame, pane, other relevant presentation context. similar effect achieved following HTML fragment: HREF="http://www.example.org" target="_blank">...</A> application traversing ending resource load resource same window, frame, pane, other relevant presentation context starting resource was loaded. similar effect achieved following HTML fragment: HREF="http://www.example.org" target="_self">...</A> application traversing ending resource load presentation place presentation starting resource. similar effect achieved following HTML fragment: SRC="http://www.example.org/smiley.gif" ALT=":-)"> presentation starting resource typically not consist entire document; be entire document only root element document simple link. Thus, embedding typically effect distinct replacing. Just as HTML IMG element, embedding only presentation relevant resources; not dictate permanent transformation starting resource. Put way, embedded XLink processed, result styling ending resource link merged result styling resource embedded. contrast, construct such as element resolved, transformation place theoriginal source document. behavior conforming XLink applications embedding XML-based ending resources not defined version specification. presentation embedded resources application dependent. behavior application traversing ending resource unconstrained specification. application look other markup present link determine appropriate behavior. behavior application traversing ending resource unconstrained specification. other markup present help application determine appropriate behavior. starting ending resource multiple non-contiguous locations, such as series string ranges various locations resource, then application behavior unconstrained. more information about selecting portions XML documents.) Note: possibilities application behavior non-contiguous ending resources include highlighting location, producing dialog box reader choose locations as there were separate arcs leading concatenating content locations presentation, so Application behavior non-contiguous starting resources include concatenation rendering as single unit, creating arc emanating contiguousportion. actuate Attribute actuate attribute used communicate desired timing traversal starting resource ending resource.. Constraint: actuate Value value supplied actuate attribute, be be values Conforming XLink applications apply following treatment actuate values: application traverse ending resource immediately loading starting resource. similar effect typically achieved following HTML fragment, user agent configured display images: SRC="http://www.example.org/smiley.gif" ALT=":-)"> single resource multiple arcs behavior set show="replace" actuate="onLoad", application behavior unconstrained XLink. application traverse starting resource ending resource only post-loading event triggered purpose traversal. example such event be user presentation starting resource, software module finishes countdown redirect. behavior application traversing ending resource unconstrained specification. application look other markup present link determine appropriate behavior. behavior application traversing ending resource unconstrained specification. other markup present help application determine appropriate behavior. Traversal Attributes traversal attributes are label, label attribute be used resource- locator-type elements. attributes be used arc-type element. Constraint: label, Values value label, attribute be NCName. value supplied attribute, correspond same value label attribute locator- resource-type element as direct child inside same extended-type elementas arc-type element. References A.1 Normative References RFC RFC XML Media Types. Makoto, M., St. Laurent, S. D. Kohn, editors. Internet Engineering Task Force, RFC RFC Uniform Resource Identifier Generic Syntax. Berners-Lee, T., Fielding, R., Masinter, L, editors. Internet Engineering Task Force, RFC RFC Internationalized Resource Identifiers Internet Engineering Task Force, Legacy extended IRIs Legacy extended IRIs XML resource identification. Henry S. Thompson, Richard Tobin, Norman Walsh, editors. World Wide Web Consortium, XML Extensible Markup Language Edition). Tim Bray, Jean Paoli, C.M. Sperberg-McQueen, et. al., editors. World Wide Web Consortium, RFC Key words use RFCs Indicate Requirement Levels. S. Bradner, editor. Internet Engineering Task Force, XML Base XML Base Edition). Jonathan Marsh Richard Tobin, editors. World Wide Web Consortium, XML Names Namespaces XML Edition). Tim Bray, Dave Hollander, Andrew Layman, et. al. editors. World Wide Web Consortium, XPointer Framework XPointer Framework Grosso, Paul, Eve Maler, Jonathan Marsh, Norman Walsh, editors. World Wide Web Consortium, XPointer element() Scheme XPointer element() Scheme Grosso, Paul, Eve Maler, Jonathan Marsh, Norman Walsh, editors. World Wide Web Consortium, CharMod Fundamentals Character Model World Wide Web Fundamentals DÃ¼rst, Martin J., FranÃ§ois Yergeau, Richard Ishida, et. al., editors. World Wide Web Consortium, A.2 Non-Normative References Extending XLink Extending XLink Norman Walsh, Editor. World Wide Web Consortium, Jan XML Linking Language Version XML Linking Language Version Steven DeRose, David Orchard, Eve Maler, Editors. World Wide Web Consortium, Jun Dexter Dexter Hypertext Reference Model." Halasz, Frank. Communications Association Computing Machinery February FRESS Steven J. DeRose Andries van Dam. structure FRESS Hypertext System." Markup Languages Winter. Cambridge: MIT Press: HTML HTML Specification. World Wide Web Consortium, Intermedia Concept Construction Seamless Information Environment." Yankelovich, Nicole, Bernard J. Haan, Norman K. Meyrowitz, Steven M. Drucker. IEEE Computer ISO/IEC ISO/IEC Information technology-Hypermedia/Time-based Structuring Language International Organization Standardization, Extended Facilities Annex. ISO Organization Standardization). International Organization Standardization, MicroCosm Rethinking Hypermedia: Microcosm Approach. Hall, Wendy, Hugh Davis, Gerard Hutchings. Boston: Kluwer Academic Publishers. ISBN OHS Role XML Open Hypermedia Systems." van Ossenbruggen, Jacco, Anton EliÃ«ns Lloyd Rutledge. Position paper 4th Workshop Open Hypermedia Systems, ACM Hypertext RDF RDF Primer. Manola, Frank Eric Miller, editors. World Wide Web Consortium, TEI Guidelines Electronic Text Encoding Interchange. C. M. Sperberg-McQueen Lou Burnard, editors. Association Computers Humanities Association Computational Linguistics Association Literary Linguistic Computing Chicago, Oxford: Text Encoding Initiative, XIS XML Information Set. John Cowan Richard Tobin, editors. World Wide Web Consortium, XInclude XML Inclusions Version Edition). Jonathan Marsh, David Orchard, Daniel Veillard, editors. World Wide Web Consortium, XLREQ XML XLink Requirements Version Steven DeRose, editor. World Wide Web Consortium, XPTR XML Pointer Language Ron Daniel, Steve DeRose, Eve Maler, et. al. editors. World Wide Web Consortium, XML Schema Part Structures XML Schema Part Structures. David Beech, Noah Mendelsohn, Murray Maloney, Henry S. Thompson, Editors. World Wide Web Consortium, RELAX NG ISO/IEC Information technology Document Schema Definition Language Part Regular-grammar-based validation RELAX NG. International Organization Standardization, CSS Cascading Style Sheets Level Revision Specification. Bert Bos, Tantek Ãelik, Ian Hickson, et. al., editors. World Wide Web Consortium, Ruby Annotation Ruby Annotation. Michel Suignard, Tex Texin, Marcin Sawicki, et. al., Editors. World Wide Web Consortium, B Sample DTD following DTD invalid purposes argument) XLink constructs specification not specify behavior. provided only as convenience application developers; normative status. following assumptions hold DTD: Only constructs have XLink-defined meaning are allowed. vocabularies are mixed since DTDs do not work namespaces. use means there typically content provided element used XLink way. use construct means non-title content provided XLink-defined use. Elements are named after XLink element types represent. Other assumptions conditions appear as comments DTD. % showActuate #IMPLIED xlink:actuate #IMPLIED"><!ENTITY % simpleAttrs xlink:href CDATA #IMPLIED xlink:role CDATA #IMPLIED xlink:arcrole CDATA #IMPLIED xlink:title CDATA #IMPLIED %showActuate;'><!ELEMENT simple simple xmlns:xlink CDATA #FIXED %simpleAttrs;><!ENTITY % extendedContent.extras % extendedModel %extendedContent.extras;)*"><!ENTITY % extendedAttrs #FIXED xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED'><!ELEMENT extended extended xmlns:xlink CDATA #FIXED %extendedAttrs;><!ENTITY % titleAttrs #FIXED xml:lang CDATA #IMPLIED'><!ELEMENT title xml:lang not required, much motivation title elements addition attributes, so provided here convenience title %titleAttrs;><!ENTITY % resourceAttrs #FIXED xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED xlink:label NMTOKEN #IMPLIED'><!ELEMENT resource resource %resourceAttrs;><!ENTITY % locatorAttrs #FIXED xlink:href CDATA #REQUIRED xlink:role CDATA #IMPLIED xlink:title CDATA #IMPLIED xlink:label NMTOKEN #IMPLIED'><!ELEMENT locator label not required, locators have particular XLink function are not labeled locator %locatorAttrs;><!ENTITY % arcAttrs #FIXED xlink:arcrole CDATA #IMPLIED xlink:title CDATA #IMPLIED xlink:from NMTOKEN #IMPLIED xlink:to NMTOKEN #IMPLIED %showActuate;'><!ELEMENT arc have default behavior values are missing arc %arcAttrs;> C Sample XML Schema following XML Schema document, Schema Part Structures], XLink-1.1-specific declarations definitions use defining linking elements conform specification. permanent copy schema document available copy available time publication copies are identical, version change future reflect subsequent editions versions XLink XML Schema. version='1.0' encoding='UTF-8'?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.w3.org/1999/xlink" xmlns:xlink="http://www.w3.org/1999/xlink"> schema document attribute declarations andattribute group, complex type simple type definitions be used inthe construction user schemas define structure particular linkingconstructs, e.g.<![CDATA[<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"> namespace="http://www.w3.org/1999/xlink" location="http://www.w3.org/1999/xlink.xsd"> name="mySimple"> ref="xl:simpleAttrs"/> namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/> name="type" type="xlink:typeType"/> name="typeType"> base="xs:token"> value="simple"/> value="extended"/> value="title"/> value="resource"/> value="locator"/> value="arc"/> name="href" type="xlink:hrefType"/> name="hrefType"> base="xs:anyURI"/> name="role" type="xlink:roleType"/> name="roleType"> base="xs:anyURI"> value="1"/> name="arcrole" type="xlink:arcroleType"/> name="arcroleType"> base="xs:anyURI"> value="1"/> name="title" type="xlink:titleAttrType"/> name="titleAttrType"> base="xs:string"/> name="show" type="xlink:showType"/> name="showType"> base="xs:token"> value="new"/> value="replace"/> value="embed"/> value="other"/> value="none"/> name="actuate" type="xlink:actuateType"/> name="actuateType"> base="xs:token"> value="onLoad"/> value="onRequest"/> value="other"/> value="none"/> name="label" type="xlink:labelType"/> name="labelType"> base="xs:NCName"/> name="from" type="xlink:fromType"/> name="fromType"> base="xs:NCName"/> name="to" type="xlink:toType"/> name="toType"> base="xs:NCName"/> name="simpleAttrs"> ref="xlink:type" fixed="simple"/> ref="xlink:href"/> ref="xlink:role"/> ref="xlink:arcrole"/> ref="xlink:title"/> ref="xlink:show"/> ref="xlink:actuate"/> name="simpleModel"> processContents="lax" minOccurs="0" maxOccurs="unbounded"/> mixed="true" name="simple"> Intended use as type user-declared elements make simple links. ref="xlink:simpleModel"/> ref="xlink:simpleAttrs"/> name="extendedAttrs"> ref="xlink:type" fixed="extended" use="required"/> ref="xlink:role"/> ref="xlink:title"/> name="extendedModel"> ref="xlink:title"/> ref="xlink:resource"/> ref="xlink:locator"/> ref="xlink:arc"/> name="extended"> Intended use as type user-declared elements make extended links. Note elements referenced content model are abstract. intention simply declaring elements as substitutionGroup, things happen. ref="xlink:extendedModel" minOccurs="0" maxOccurs="unbounded"/> ref="xlink:extendedAttrs"/> name="title" type="xlink:titleEltType" abstract="true"/> name="titleAttrs"> ref="xlink:type" fixed="title" use="required"/> ref="xml:lang"> xml:lang not required, much motivation title elements addition attributes, so provided here convenience. name="titleModel"> processContents="lax" minOccurs="0" maxOccurs="unbounded"/> mixed="true" name="titleEltType"> ref="xlink:titleModel"/> ref="xlink:titleAttrs"/> name="resource" type="xlink:resourceType" abstract="true"/> name="resourceAttrs"> ref="xlink:type" fixed="resource" use="required"/> ref="xlink:role"/> ref="xlink:title"/> ref="xlink:label"/> name="resourceModel"> processContents="lax" minOccurs="0" maxOccurs="unbounded"/> mixed="true" name="resourceType"> ref="xlink:resourceModel"/> ref="xlink:resourceAttrs"/> name="locator" type="xlink:locatorType" abstract="true"/> name="locatorAttrs"> ref="xlink:type" fixed="locator" use="required"/> ref="xlink:href" use="required"/> ref="xlink:role"/> ref="xlink:title"/> ref="xlink:label"> label not required, locators have particular XLink function are not labeled. name="locatorModel"> ref="xlink:title" minOccurs="0" maxOccurs="unbounded"/> name="locatorType"> ref="xlink:locatorModel"/> ref="xlink:locatorAttrs"/> name="arc" type="xlink:arcType" abstract="true"/> name="arcAttrs"> ref="xlink:type" fixed="arc" use="required"/> ref="xlink:arcrole"/> ref="xlink:title"/> ref="xlink:show"/> ref="xlink:actuate"/> ref="xlink:from"/> ref="xlink:to"> have default behavior values are missing name="arcModel"> ref="xlink:title" minOccurs="0" maxOccurs="unbounded"/> name="arcType"> ref="xlink:arcModel"/> ref="xlink:arcAttrs"/> Note: Working Group work XBRL Consortium producing W3C XML Schema XLink was useful input design schema document XLink D Sample RELAX NG Grammar following NG] Grammars compact syntax) validate XLink are provided only as convenience application developers; have normative status. xlink11-simple.rnc: namespace xlink anyElementanyElement simple foreignElementforeignElement element xlink:* text)* attribute xlink:type attribute xlink:href attribute xlink:role attribute xlink:arcrole attribute xlink:title attribute xlink:show attribute xlink:actuate attribute xlink:* element href.att)), role.att?, arcrole.att?, title.att?, show.att?, actuate.att?, text)* xlink11.rnc: namespace xlink anyElement simple extended foreignElement attribute xlink:label attribute xlink:from attribute xlink:to element attribute xlink:type role.att?, title.att?, resource locator arc anyElement text)* element attribute xlink:type text)* element attribute xlink:type role.att?, title.att?, label.att?, text)* element attribute xlink:type href.att, role.att?, title.att?, label.att?, anyElement text)* element attribute xlink:type arcrole.att?, title.att?, from.att?, to.att?, show.att?, actuate.att?, anyElement text)* E Changes XLink specification implements changes described XLink changes make XLink more useful places already being used make practical variety similar vocabularies. Linking Language Version following ways: xlink:type attribute longer required simple links. absence xlink:type attribute, XLink treated as simple link. Linking Language Version referred URIs, specification IRIs. broader range values properties are identified resource identifier. specification non-normative sample XML Schema RELAX NG grammars complement existing, non-normative sample DTD. addition, few editorial changes have also been made. bibliographic references have been updated point more recent specifications. conformance language been rewritten support new, simple conformance level applications only expect process simple links. Several examples have been changed highlight presence non-normative grammars other DTD. text describing interpretation locator attribute been moved separate specification extended IRIs]) so more easily be reused. locator attribute now described reference specification. 